function calTotal(tab_str,rows,cols)
{
	start=document.getElementById("start_"+tab_str).value;
	if(start == '100')
	{
		return;
	}
	if(document.getElementById("total_"+tab_str+"_"+start) == null)
	{              
		return;
	}		   
	if(document.getElementById("start_row_"+tab_str)!=null)
	{
		var_j=parseInt(document.getElementById("start_row_"+tab_str).value);
	}
	else
	{
		var_j=1;
	}       
	for(var i=parseInt(start);i<(parseInt(cols)+3);i++)
	{
		if(document.getElementById("total_"+tab_str+"_"+i) != null)
		{
			var temp_tot=0;
			for(j=var_j;j<=parseInt(rows);j++)
			{

				if(document.getElementById("id_td_"+tab_str+"_"+j+"_"+i) != null && document.getElementById("id_td_"+tab_str+"_"+j+"_"+i).innerHTML.length>0)
				{
					var delNode = document.getElementById('id_temp_'+tab_str+'_'+j+'_1');
					if(delNode != null && delNode.value=='deleted')
					{
						// Do not add
					}
					else
					{     
//						var valStr = document.getElementById("id_td_"+tab_str+"_"+j+"_"+i).innerHTML;
						var valStr = getTableColumnValClassic(tab_str, j, i-3);

						if(valStr == "")
							valStr = "0";
						else
						{
							while(valStr.indexOf(",") != -1)
							{
								valStr = valStr.replace(',','');
							}
						}
						temp_tot=temp_tot + parseFloat(valStr,10);
					}
				}

			}
			if(document.getElementById("total_"+tab_str+"_"+i) != null)                 
			{       
				temp_tot=Math.round(temp_tot*100)/100;                
				document.getElementById("total_"+tab_str+"_"+i).value=convertToKenyanShillingFormatValWithDecimal(temp_tot,false);
			}
		}
		// convertToIndianNumberFormatNoAlert(document.getElementById("total_"+tab_str+"_"+i));
	}       
}



//The following function is used to handle the error which is genereated while 
//clicking on the image of Add or modify. In this function I am passing 
//the table ID as a paramenter.This is the only that table for which we are using other
//functions of this file like ADDROW...   --SURESH

function on_error_tabl(strTblId)
{   
	var but=document.getElementById(strTblId);
	var str=but.src;
	var len=str.length;
	var ch=str.charAt(str.length - 5);
	if(ch == "y")       //For Modify image  
		but.src="Common/Images/Modify.jpg"
			else if(ch == "d")  //For Add image
				but.src="Common/Images/Add.jpg"
}


function addrow(tab_str,show_n,str_n,start,fn_name_delete,fn_name_modify, hideDeleteFlag, hideModifyFlag, addUpdateDeleteFlag,hiddenCol,showCol)
{
	var cols=parseInt(str_n);
	var showcols=parseInt(show_n);
	
	var empty=0;

	var tbl = document.getElementById(tab_str);
	var rows = tbl.rows.length;

	var funcNameElement = document.getElementById(tab_str + '_beforeAddFunction');
	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			if(window[funcName](rows) === false)
				return;
	}

	var row = tbl.insertRow(rows);
	row.className="whitepapartd";
	row.style.textAlign = "center";
	var sr_no = row.insertCell(0);
	if(document.getElementById("start_row_"+tab_str)!=null)
		var textNode = document.createTextNode(rows-parseInt(document.getElementById("start_row_"+tab_str).value)+1);
	else
		var textNode = document.createTextNode(rows);
	sr_no.appendChild(textNode);


	var delete_col = row.insertCell(1);

	if (hideDeleteFlag == 'Y' || hideDeleteFlag == 'y')
		delete_col.style.display="none";

	//Start - for hidden Delete Field
	var txt_node = document.createElement('input');
	txt_node.setAttribute('type','hidden'); 
	txt_node.setAttribute('name',tab_str+'_'+rows+'_1'); 
	txt_node.setAttribute('id','id_temp_'+tab_str+'_'+rows+'_1');
	txt_node.setAttribute('value','Delete');
	delete_col.appendChild(txt_node);
	//End - for hidden Delete Field

	var textnodeDelete =  document.createElement('a');

	textnodeDelete.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'1');
	textnodeDelete.setAttribute('name','Delete');
	if(fn_name_delete==undefined || fn_name_delete=='')                
		textnodeDelete.setAttribute('href','javascript:fn_ShowActDelete("'+tab_str+'","'+rows+'","'+cols+'","'+showcols+'");');
	else
	{    
		textnodeDelete.setAttribute('href','javascript:fn_ShowActDelete("'+tab_str+'","'+rows+'","'+cols+'","'+showcols+'");javascript:'+fn_name_delete+'("'+tab_str+'","'+rows+'","'+cols+'");');        
	}

	var DeletelinkText=document.createTextNode('Delete');

	textnodeDelete.appendChild(DeletelinkText);
	delete_col.appendChild(textnodeDelete);

	var modify_col = row.insertCell(2);
	if (hideModifyFlag == 'Y' || hideModifyFlag == 'y')
		modify_col.style.display="none";
	var textnodemodify =  document.createElement('a');
	textnodemodify.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'2');
	textnodemodify.setAttribute('name','Modify');

	if(fn_name_modify==undefined || fn_name_modify == '')   
		textnodemodify.setAttribute('href','javascript:fn_ShowActModify("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'");');                                            
	else
		textnodemodify.setAttribute('href','javascript:fn_ShowActModify("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'");javascript:' + fn_name_modify+ '("'+tab_str+'","'+showcols + '","' +rows +'","'+cols+'");');                

	var ModifylinkText=document.createTextNode('Modify');
	textnodemodify.appendChild(ModifylinkText);
	modify_col.appendChild(textnodemodify);

	//Below for loop is for visible columns

	var txt_node = document.createElement('input');
	txt_node.setAttribute('type','hidden'); 

	txt_node.setAttribute('name',tab_str+'_'+rows); 
	txt_node.setAttribute('id','id_'+tab_str+'_'+rows);
	var value = '';
	var hiddenColArray='';
	var showColArray='';
	//added by prateek
	if(hiddenCol!=undefined && hiddenCol!="" ){
		hiddenColArray=hiddenCol.split(","); 
	}
	for(var i=3;i<(showcols + 3);i++)
	{
		var node = row.insertCell(i);
		node.setAttribute('id','id_td_'+tab_str+'_'+rows+'_'+i);
		if(hiddenColArray.length>0){
			for(var j=0; j<hiddenColArray.length;j++){
				if(i==hiddenColArray[j]){
					hiddenColArray.splice(0,1); 
					value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
					clearField(document.getElementById('in_' + tab_str + '_' + i));
					node.style.display='none';
					node.appendChild(txt_node);
					break;
				}
				else{
					node.innerHTML = getPropertyShowValue(document.getElementById('in_'+tab_str+'_'+i));
					value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
					clearField(document.getElementById('in_' + tab_str + '_' + i));
					node.appendChild(txt_node);
					break;
				}
			}
		}
	
		else{
			node.innerHTML = getPropertyShowValue(document.getElementById('in_'+tab_str+'_'+i));
			value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
			clearField(document.getElementById('in_' + tab_str + '_' + i));
			node.appendChild(txt_node);
		}
		
	/*	if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
		{		           
			var comboval = document.getElementById('in_'+tab_str+'_'+i);
		     if(comboval.value == null || comboval.value == '' || comboval.value == '-1')
		      {
		         value += '&nbsp;';
		       }
		      else
		       {
		    	  node.innerHTML = getPropertyShowValue(document.getElementById('in_'+tab_str+'_'+i));
		    	  value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
		       }
		 }*/

	}
	var cnt="";
	if(showCol!=undefined && showCol!="" ){
		showColArray=showCol.split(","); 
		cnt=1;
	}

	// Below for loop is for hidden columns
	for(var i=3+showcols;i<(cols + 3);i++)
	{
		/*value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
		clearField(document.getElementById('in_' + tab_str + '_' + i));
		node.appendChild(txt_node);*/
		
		
		if(showColArray.length>0){
			for(var j=0; j<showColArray.length;j++){
				if(i==showColArray[j]){
					 node = row.insertCell(showcols+cnt+2);
					node.setAttribute('id','id_td_'+tab_str+'_'+rows+'_'+i);
					showColArray.splice(0,1); 
					node.innerHTML = getPropertyShowValue(document.getElementById('in_'+tab_str+'_'+i));
					value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
					clearField(document.getElementById('in_' + tab_str + '_' + i));
					node.appendChild(txt_node);
					cnt=cnt+1;
					break;
				}
				else{
					value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
					clearField(document.getElementById('in_' + tab_str + '_' + i));
					node.appendChild(txt_node);
					break;
				}
			}
		}
		
		else{
			value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
			clearField(document.getElementById('in_' + tab_str + '_' + i));
			node.appendChild(txt_node);
		}
	}
	
	
	// end for hidden cols
	// Start by Varun for Update/Delete Flag
	if(!(addUpdateDeleteFlag === false) && document.getElementById(tab_str + "_updateDeleteFlag") && "true" == document.getElementById(tab_str + "_updateDeleteFlag").value)
	{
		value += "addRowRecordType" + propertyValueDelimiter + "new" ;
	}
	// End by Varun for Update/Delete Flag

	txt_node.setAttribute('value',value);

	document.getElementById("counter_"+tab_str).value=rows; 
	document.getElementById("start_"+tab_str).value=start;

	if(document.getElementById(tab_str+"Change"))
	{
		document.getElementById(tab_str+"Change").value="Y"; 
//		alert(tab_str+" value --> "+document.getElementById(tab_str+"Change").value);
	}

	calTotal(tab_str,rows,showcols);

	// Code added by Varun to call a function after adding the record in the table.
	funcNameElement = document.getElementById(tab_str + '_afterAddFunction');
	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			window[funcName](rows);
	}
}

function addmorerow(tab_str,show_n,str_n,start,fn_name_delete,fn_name_modify,reset_strt,reset_end)
{

	var cols=parseInt(str_n);
	var showcols=parseInt(show_n);

	var empty=0;

	var tbl = document.getElementById(tab_str);
	var rows = tbl.rows.length;
	var row = tbl.insertRow(rows);
	row.className="whitepapartd";
	row.style.textAlign = "center";
	var sr_no = row.insertCell(0);
	if(document.getElementById("start_row_"+tab_str)!=null)
		var textNode = document.createTextNode(rows-parseInt(document.getElementById("start_row_"+tab_str).value)+1);
	else
		var textNode = document.createTextNode(rows);
	sr_no.appendChild(textNode);


	var delete_col = row.insertCell(1);
	//Start - for hidden Delete Field
	var txt_node = document.createElement('input');
	txt_node.setAttribute('type','hidden'); 
	txt_node.setAttribute('name',tab_str+'_'+rows+'_1'); 
	txt_node.setAttribute('id','id_temp_'+tab_str+'_'+rows+'_1');
	txt_node.setAttribute('value','Delete');
	delete_col.appendChild(txt_node);
	//End - for hidden Delete Field

	var textnodeDelete =  document.createElement('a');
	textnodeDelete.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'1');
	textnodeDelete.setAttribute('name','Delete');
	if(fn_name_delete==undefined || fn_name_delete=='')                
		textnodeDelete.setAttribute('href','javascript:fn_ShowActDelete("'+tab_str+'","'+rows+'","'+cols+'","'+showcols+'");');
	else
	{    
		textnodeDelete.setAttribute('href','javascript:fn_ShowActDelete("'+tab_str+'","'+rows+'","'+cols+'","'+showcols+'");javascript:'+fn_name_delete+'("'+tab_str+'","'+rows+'","'+cols+'");');        
	}

	var DeletelinkText=document.createTextNode('Delete');
	textnodeDelete.appendChild(DeletelinkText);
	delete_col.appendChild(textnodeDelete);

	var modify_col = row.insertCell(2);
	var textnodemodify =  document.createElement('a');
	textnodemodify.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'2');
	textnodemodify.setAttribute('name','Modify');

	if(fn_name_modify==undefined || fn_name_modify == '')   
		textnodemodify.setAttribute('href','javascript:fn_ShowActModify("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'");');                                            
	else
		textnodemodify.setAttribute('href','javascript:fn_ShowActModify("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'");javascript:' + fn_name_modify+ '("'+tab_str+'","'+showcols + '","' +rows +'","'+cols+'");');                

	var ModifylinkText=document.createTextNode('Modify');
	textnodemodify.appendChild(ModifylinkText);
	modify_col.appendChild(textnodemodify);

	//Below for loop is for visible columns

	var txt_node = document.createElement('input');
	txt_node.setAttribute('type','hidden'); 

	txt_node.setAttribute('name',tab_str+'_'+rows); 
	txt_node.setAttribute('id','id_'+tab_str+'_'+rows);
	var value = '';


	for(var i=3;i<(showcols + 3);i++)
	{
		var node = row.insertCell(i);
		node.setAttribute('id','id_td_'+tab_str+'_'+rows+'_'+i);
		if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
		{
			var comboval = document.getElementById('in_'+tab_str+'_'+i);
			node.innerHTML = comboval.options[comboval.selectedIndex].text;
		}
		else
		{
			node.innerHTML = document.getElementById('in_'+tab_str+'_'+i).value;
		}
		if(document.getElementById('in_'+tab_str+'_'+i).value == '')
		{
			value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter  + columnsDelimiter;
		}
		else
		{
			value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter +document.getElementById('in_'+tab_str+'_'+i).value + columnsDelimiter;
		}
		if(i > reset_strt && i <= reset_end)
		{   
			document.getElementById('in_'+tab_str+'_'+i).value="";
		}
		node.appendChild(txt_node);
	}

	//Below for loop is for hidden columns
	for(var i=3+showcols;i<(cols + 3);i++)
	{
		if(document.getElementById('in_'+tab_str+'_'+i).value == '')
		{
			value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter + columnsDelimiter;
		}
		else
		{
			value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter +document.getElementById('in_'+tab_str+'_'+i).value + columnsDelimiter;
		}
		document.getElementById('in_'+tab_str+'_'+i).value="";
		node.appendChild(txt_node);
	}
	// end for hidden cols
	txt_node.setAttribute('value',value);

	document.getElementById("counter_"+tab_str).value=rows; 
	document.getElementById("start_"+tab_str).value=start;

	calTotal(tab_str,rows,showcols);
}
function addrowNew(tab_str,show_n,str_n,start)
{
	var cols=parseInt(str_n);
	var showcols=parseInt(show_n);
	var empty=0;

	var tbl = document.getElementById(tab_str);
	var rows = tbl.rows.length;

	var row = tbl.insertRow(rows);
	row.className="whitepapartd";
	row.style.textAlign = "center";
	var sr_no = row.insertCell(0);
	if(document.getElementById("start_row_"+tab_str)!=null)
		var textNode = document.createTextNode(rows-parseInt(document.getElementById("start_row_"+tab_str).value)+1);
	else
		rows=rows-1;    

	rows=rows-1;

	var textNode = document.createTextNode(rows);
	sr_no.appendChild(textNode);


	var delete_col = row.insertCell(1);
	//Start - for hidden Delete Field
	var txt_node = document.createElement('input');
	txt_node.setAttribute('type','hidden'); 
	txt_node.setAttribute('name',tab_str+'_'+rows+'_1'); 
	txt_node.setAttribute('id','id_temp_'+tab_str+'_'+rows+'_1');
	txt_node.setAttribute('value','Delete');
	delete_col.appendChild(txt_node);
	//End - for hidden Delete Field

	var textnodeDelete =  document.createElement('a');
	textnodeDelete.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'1');
	textnodeDelete.setAttribute('name','Delete');
	textnodeDelete.setAttribute('href','javascript:fn_ShowActDelete("'+tab_str+'","'+rows+'","'+cols+'");');
	var DeletelinkText=document.createTextNode('Delete');
	textnodeDelete.appendChild(DeletelinkText);
	delete_col.appendChild(textnodeDelete);

	var modify_col = row.insertCell(2);
	var textnodemodify =  document.createElement('a');
	textnodemodify.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'2');
	textnodemodify.setAttribute('name','Modify');
	textnodemodify.setAttribute('href','javascript:fn_ShowActModify("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'");');
	var ModifylinkText=document.createTextNode('Modify');
	textnodemodify.appendChild(ModifylinkText);
	modify_col.appendChild(textnodemodify);

	for(var i=3;i<(showcols + 3);i++)
	{

		var node = row.insertCell(i);
		node.setAttribute('id','id_td_'+tab_str+'_'+rows+'_'+i);
		if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
		{
			var comboval = document.getElementById('in_'+tab_str+'_'+i);
			node.innerHTML = comboval.options[comboval.selectedIndex].text;
		}
		else
		{
			node.innerHTML = document.getElementById('in_'+tab_str+'_'+i).value;
		}
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		node.appendChild(txt_node);
	}
	//for hidden cols
	for(var i=3+showcols;i<(cols + 3);i++)
	{
		//var node = row.insertCell(i);
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		node.appendChild(txt_node);
	}
	// end for hidden cols

	document.getElementById("counter_"+tab_str).value=rows; 
	document.getElementById("start_"+tab_str).value=start;

	calTotal(tab_str,rows,cols);
}
function addrowonly(tab_str,str_n,start)
{
	var cols=parseInt(str_n);
	var empty=0;

	var tbl = document.getElementById(tab_str);
	var rows = tbl.rows.length;
	var row = tbl.insertRow(rows);
	row.className="whitepapartd";
	row.style.textAlign = "center";
	var sr_no = row.insertCell(0);
	if(document.getElementById("start_row_"+tab_str)!=null)
		var textNode = document.createTextNode(rows-parseInt(document.getElementById("start_row_"+tab_str).value)+1);
	else
		var textNode = document.createTextNode(rows);
	sr_no.appendChild(textNode);

	for(i=3;i<(cols + 3);i++)
	{
		var node = row.insertCell(i-2);
		if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
		{
			var comboval = document.getElementById('in_'+tab_str+'_'+i);
			node.innerHTML = comboval.options[comboval.selectedIndex].text;
		}
		else
		{
			node.innerHTML = document.getElementById('in_'+tab_str+'_'+i).value;
		}
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		node.appendChild(txt_node);
	}
	document.getElementById("counter_"+tab_str).value=rows; 
	document.getElementById("start_"+tab_str).value=start;

	calTotal(tab_str,rows,cols);
}
function addrowonlyError(tab_str,str_n,start)
{
	var cols=parseInt(str_n);
	var empty=0;

	var tbl = document.getElementById(tab_str);
	var rows = tbl.rows.length;
	var row = tbl.insertRow(rows);
	row.className="whitepapartd"; // css class needs to be checked (348506)
	row.style.textAlign = "center";
	var sr_no = row.insertCell(0);
	if(document.getElementById("start_row_"+tab_str)!=null)
		var textNode = document.createTextNode(rows-parseInt(document.getElementById("start_row_"+tab_str).value)+1);
	else
		var textNode = document.createTextNode(rows);
	sr_no.appendChild(textNode);

	for(i=3;i<(cols + 3);i++)
	{
		var node = row.insertCell(i-2);
		if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
		{
			var comboval = document.getElementById('in_'+tab_str+'_'+i);
			node.innerHTML = comboval.options[comboval.selectedIndex].text;
		}
		else
		{
			node.innerHTML = document.getElementById('in_'+tab_str+'_'+i).value;
		}
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		node.appendChild(txt_node);
	}
	document.getElementById("counter_"+tab_str).value=rows; 
	document.getElementById("start_"+tab_str).value=start;

	calTotal(tab_str,rows,cols);
}

function addrowview(tab_str,show_n,str_n,start)
{
	var cols=parseInt(str_n);
	var showcols=parseInt(show_n);
	var empty=0;

	var tbl = document.getElementById(tab_str);
	var rows = tbl.rows.length;
	var row = tbl.insertRow(rows);
	row.className="whitepapartd";
	row.style.textAlign = "center";
	var sr_no = row.insertCell(0);
	var textNode = document.createTextNode(rows);
	sr_no.appendChild(textNode);

	var view_col = row.insertCell(1);
	var textnodeView =  document.createElement('a');
	textnodeView.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'1');
	textnodeView.setAttribute('name','View');
	textnodeView.setAttribute('href','javascript:fn_ShowActViewRow("'+tab_str+'","'+rows+'","'+cols+'");');
	var ViewlinkText=document.createTextNode('View');
	textnodeView.appendChild(ViewlinkText);
	view_col.appendChild(textnodeView);

	var clear_col = row.insertCell(2);
	var textnodeclear =  document.createElement('a');
	textnodeclear.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'2');
	textnodeclear.setAttribute('name','Clear');
	textnodeclear.setAttribute('href','javascript:fn_ShowActClearRow("'+tab_str+'","'+rows+'","'+cols+'");');
	var ClearlinkText=document.createTextNode('Clear');
	textnodeclear.appendChild(ClearlinkText);
	clear_col.appendChild(textnodeclear);

	for(i=3;i<(showcols + 3);i++)
	{
		var node = row.insertCell(i);
		node.setAttribute('id','id_td_'+tab_str+'_'+rows+'_'+i);
		if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
		{
			var comboval = document.getElementById('in_'+tab_str+'_'+i);
			node.innerHTML = comboval.options[comboval.selectedIndex].text;
		}
		else
		{
			node.innerHTML = document.getElementById('in_'+tab_str+'_'+i).value;
		}
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		node.appendChild(txt_node);
	}
	//for hidden cols
	for(i=3+showcols;i<(cols + 3);i++)
	{
		//var node = row.insertCell(i);
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		node.appendChild(txt_node);
	}
	// end for hidden cols

	document.getElementById("counter_"+tab_str).value=rows; 
	document.getElementById("start_"+tab_str).value=start;

	calTotal(tab_str,rows,cols);
}
var mDeleteFlag = false;
function fn_ShowActDelete(tab_str,rowno,str_cols,showcols)
{
	
	if(document.getElementById('id_'+tab_str+'_'+rowno+'_1').name != "deleted")
	{
		// Code added by Varun to call a function before deleting the record in the table.
		// If it returns false, then the record wont be deleted.
		var funcNameElement = document.getElementById(tab_str + '_beforeDeleteFunction');
		if(funcNameElement != null && funcNameElement.value != "")
		{
			var funcName = funcNameElement.value;
			if(window[funcName])
				if(window[funcName](rowno) === false)
					return;
		}

		if(confirm("Are you sure to delete this Record?"))
		{
			mDeleteFlag = true;
			cols=parseInt(str_cols);
			var newTextVal = "deleted";
			var newTextVal1 = "";
			var tabledef = document.getElementById('id_'+tab_str+'_'+rowno+'_1');
			var textdel = document.getElementById('id_temp_'+tab_str+'_'+rowno+'_1');
			if(trim(tabledef.innerHTML)=='Delete')
			{
				tabledef.innerHTML = newTextVal;
				tabledef.name="deleted";
				textdel.value="deleted";
				var tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_2');     
				tablemod.name="";
				tablemod.innerHTML = newTextVal1; 
			}

			var textnodeDelete = document.getElementById('id_'+tab_str+'_'+rowno+'_1');
			textnodeDelete.removeAttribute('href');

			rows=document.getElementById("counter_"+tab_str).value;

			if(document.getElementById(tab_str+"Change"))
			{
				document.getElementById(tab_str+"Change").value="Y"; 
//				alert(tab_str+" value --> "+document.getElementById(tab_str+"Change").value);
			}
			calTotal(tab_str,rows,showcols);

			// Start by Varun for update/delete flag
			if(getUpdateDeleteFlag(tab_str, rowno) != 'new')
			{
				setUpdateDeleteFlag(tab_str, rowno, 'deleted');
			}
			else
			{
				setUpdateDeleteFlag(tab_str, rowno, 'unchanged');
			}
			// End by Varun for update/delete flag

			// Code added by Varun to call a function after deleting the record in the table.
			var funcNameElement = document.getElementById(tab_str + '_afterDeleteFunction');
			if(funcNameElement != null && funcNameElement.value != "")
			{
				var funcName = funcNameElement.value;
				if(window[funcName])
					window[funcName](rowno);
			}
		}
		if(document.getElementById('totalTaxPayableITW') != undefined){
			var totalUnremmitedITWhtNo = Number(
					removeCommaFrmInput(document.getElementById('totalTaxPayableITW').value));
			var activeUnremmitedITWhtNo = Number(
					removeCommaFrmInput(document.getElementById('id_td_'+tab_str+'_'+rowno+'_5').innerHTML));
			var finalItWhtTax = totalUnremmitedITWhtNo - activeUnremmitedITWhtNo;
			document.getElementById('totalTaxPayableITW').value = finalItWhtTax;
		}
		if(document.getElementById('totalUndeclaredExciseDuty') != undefined){
			var totalUnremmitedExciseNo = Number(
					removeCommaFrmInput(document.getElementById('totalUndeclaredExciseDuty').value));
			var activeUnremmitedExciseNo = Number(
					removeCommaFrmInput(document.getElementById('id_td_'+tab_str+'_'+rowno+'_5').innerHTML));
			var finalExciseTax = totalUnremmitedExciseNo - activeUnremmitedExciseNo;
			document.getElementById('totalUndeclaredExciseDuty').value = finalExciseTax;
		}
	}
	
}


// Delete without Confirm
function fn_ActDelete(tab_str,rowno,str_cols)
{
	cols=parseInt(str_cols);
	var newTextVal = "deleted";
	var newTextVal1 = "";
	var tabledef = document.getElementById('id_'+tab_str+'_'+rowno+'_1');
	var textdel = document.getElementById('id_temp_'+tab_str+'_'+rowno+'_1');
	if(trim(tabledef.innerHTML)=='Delete')
	{
		tabledef.innerHTML = newTextVal;
		tabledef.name="deleted";
		textdel.value="deleted";
		var tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_2');     
		tablemod.name="";
		tablemod.innerHTML = newTextVal1; 
	}
	rows=document.getElementById("counter_"+tab_str).value;
	calTotal(tab_str,rows,cols);
}
var propertyValueDelimiter = '****';
var columnsDelimiter = '@@';
function modify_clicked(tab_str,show_n,str_rowno,str_cols,fn_name)
{

	cols=parseInt(str_cols);
	rows=parseInt(str_rowno);
	showcols=parseInt(show_n);
	
	if(document.getElementById('totalTaxPayableITW') != undefined){
		var unremmitedITWhtNo = Number(
				removeCommaFrmInput(document.getElementById('in_dtItWhtDtls_5').value));
		var totalUnremmitedITWhtNo = Number(
				removeCommaFrmInput(document.getElementById('totalTaxPayableITW').value));
		var origUnremmitedITWhtNo  = Number(
				removeCommaFrmInput(document.getElementById('in_dtItWhtDtls_6').value));
		var totalUnremmitedITWhtNo1 = totalUnremmitedITWhtNo + unremmitedITWhtNo-origUnremmitedITWhtNo;
		document.getElementById('totalTaxPayableITW').value = totalUnremmitedITWhtNo1;
	}
	if(document.getElementById('totalUndeclaredExciseDuty') != undefined){
		var unremmitedExciseNo = Number(
				removeCommaFrmInput(document.getElementById('in_dtExciseDtls_5').value));
		var totalUnremmitedExciseNo = Number(
				removeCommaFrmInput(document.getElementById('totalUndeclaredExciseDuty').value));
		var origUnremmitedExciseNo  = Number(
				removeCommaFrmInput(document.getElementById('in_dtExciseDtls_6').value));
		var totalUnremmitedExciseNo1 = totalUnremmitedExciseNo + unremmitedExciseNo-origUnremmitedExciseNo;
		document.getElementById('totalUndeclaredExciseDuty').value = totalUnremmitedExciseNo1;
	}
	/*added 13/05/2024*/
	if(tab_str != undefined){
		if(tab_str == 'dtPropertyDtls'){
			if(modifyLandlord()){
				
			}else{
				return false;

			}
			}
		
	}
	//END
	var funcNameElement = document.getElementById(tab_str + '_beforeModifyClickedFunction');
	
	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			if(window[funcName](rows) === false)
				return;
	}

	/*var txt_node = document.createElement('input');
   txt_node.setAttribute('type','hidden'); 
    txt_node.setAttribute('name',tab_str+'_'+rows); 
    txt_node.setAttribute('id','id_'+tab_str+'_'+rows);*/

	var txt_node = document.getElementById('id_'+tab_str+'_'+rows);
	var value = '';
	for(i=3;i<(showcols + 3);i++)
	{
		document.getElementById("id_td_"+tab_str+"_"+rows+"_"+i).innerHTML = getPropertyShowValue(document.getElementById('in_'+tab_str+'_'+i));
		value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
		clearField(document.getElementById('in_' + tab_str + '_' + i));
		document.getElementById("id_td_"+tab_str+"_"+rows+"_"+i).appendChild(txt_node);
	}
	for(i=3+showcols;i<(cols + 3);i++)
	{
		value += getPropertyHiddenValue(document.getElementById('in_'+tab_str+'_'+i));
		clearField(document.getElementById('in_' + tab_str + '_' + i));
		document.getElementById("id_td_"+tab_str+"_"+rows+"_"+(showcols+3-1)).appendChild(txt_node); 
	}

	// Start by Varun for update/delete flag
	var updateflag = false;
	if(getUpdateDeleteFlag(tab_str, str_rowno) != 'new')
	{
		updateflag = true;
	}
	txt_node.setAttribute('value',value);

	if(updateflag)
	{
		setUpdateDeleteFlag(tab_str, str_rowno, 'modified');
	}
	else
	{
		setUpdateDeleteFlag(tab_str, rowno, 'new');
	}
	// End by Varun for update/delete flag
	var temp_a=document.getElementById("a_"+tab_str);
//	temp_a.onmouseup=str_onmouseup2;
	temp_a.onmouseup=getVarFieldVal('str_onmouseup', tab_str);
//	temp_a.onclick=str_onclick2; 
	temp_a.onclick=getVarFieldVal('str_onclick', tab_str);
//	temp_a.href=str_href2;
	temp_a.href=getVarFieldVal('str_href', tab_str);
	temp_a.innerHTML = "Add";

	var n=parseInt(document.getElementById('counter_'+tab_str).value);
	var newTextVal = "Modify";
	var_i=1;
	for(i=var_i;i<=n;i++)
	{
		var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_2');     
		if(tablemod!= null && tablemod.name=="Modifying")
		{
			tablemod.innerHTML = newTextVal;
			tablemod.name = newTextVal;
		}
	}

	newTextVal = "Delete";

	for(i=var_i;i<=n;i++)
	{
		var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_1');  

		if(tablemod!= null && trim(tablemod.innerHTML)!="deleted")
			tablemod.innerHTML = newTextVal; 
	}
	rows=document.getElementById("counter_"+tab_str).value;
	calTotal(tab_str,rows,showcols);

	if(fn_name!=undefined)
	{
		if(fn_name == 'fn_for_disabling')
			fn_for_disabling(tab_str);
	}    	

	if(document.getElementById(tab_str+"Change"))
	{
		document.getElementById(tab_str+"Change").value="Y"; 
//		alert(tab_str+" value --> "+document.getElementById(tab_str+"Change").value);
	}

	// Code added by Varun to call a function after record is modified in the table.
	funcNameElement = document.getElementById(tab_str + '_afterModifyFunction');
	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			window[funcName](str_rowno);
	}
	
	
}

var str_onmouseup2="";
var str_onclick2="";
var str_href2="";
var validationFunc="";
var i=1,j=0;

function fn_ShowActModify(tab_str,show_n,str_rowno,str_cols)
{
	var validationFunc="";
	var validationFuncArr = ['',''];
	cols=parseInt(str_cols);
	rowno=parseInt(str_rowno);
	showcols=parseInt(show_n);

	var n=parseInt(document.getElementById('counter_'+tab_str).value);
	var modifyLinkText = "Modify";
	var_i=1;

	if(document.getElementById('id_'+tab_str+'_'+rowno+'_2').name == "Modifying")//if modify link is already clicked on the same href then return from here
	{
		return;
	}

	// Code added by Varun to call a function before modifying the record in the table.
	// If it returns false, then the record wont be deleted.
	var funcNameElement = document.getElementById(tab_str + '_beforeOnModifyFunction');
	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			if(window[funcName](rowno) === false)
				return;
	}

	var temp_a=document.getElementById("a_"+tab_str);//getting the ahref element

	//Added by Anand to get serial no. of the row, when user tries to modifies a row.

	if (document.getElementById("id_modifiedRow_no_"+tab_str)!= null)
	{
		document.getElementById("id_modifiedRow_no_"+tab_str).value =rowno;
	}

	//check started for modify link clicked on other rows
	//if it's clicked then reset it
	for(i=var_i;i<=n;i++)//iterate for the no of rows in the dynamic table
	{
		var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_2');//get the modify element for the current row     
		if(tablemod!= null && tablemod.name=="Modifying") // if modify element is not null and it was already clicked then reset it here
		{
			tablemod.innerHTML = modifyLinkText; 
			tablemod.name = newTextVal;
//			temp_a.onmouseup=str_onmouseup2;
//			temp_a.onclick=str_onclick2;
//			temp_a.href=str_href2;
			temp_a.onmouseup=getVarFieldVal('str_onmouseup', tab_str);
			temp_a.onclick=getVarFieldVal('str_onclick', tab_str);
			temp_a.href=getVarFieldVal('str_href', tab_str);
			//reset the delete button here
			document.getElementById('id_'+tab_str+'_'+i+'_1').innerHTML = "Delete";
			//break from here as only 1 element can be in Modifying state at a time, and it's reset now.
			break;
		}
	}
	//operations started here on the clicked link's row
	var modifyingTextVal = "Modifying";
	var tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_2');     //getting the modify link 
	tablemod.name="Modifying";
	tablemod.innerHTML = modifyingTextVal; 
	//parsing the @@ separated column value string 

	var colValArray = (document.getElementById("id_"+tab_str+"_"+rowno).value).split(columnsDelimiter);


	//itereate for the no of elements in array - 1, as last element will be blank
	for(i=0;i<colValArray.length - 1;i++)
	{
		var propertyName = colValArray[i].split(propertyValueDelimiter)[0];
		var propertyValue = colValArray[i].split(propertyValueDelimiter)[1];

		if(propertyValue =='' && (document.getElementById('in_'+tab_str+'_'+(i+3)).type == "select-one"))
		{
			document.getElementById('in_'+tab_str+'_'+(i+3)).selectedIndex=0;
		}
		//Code added By Richi For elements of type Radio
		/*else if(document.getElementById('in_'+tab_str+'_'+(i+3)).type == "radio")
            {
            	if(propertyValue !='')
            	{
            		var radioObj=document.getElementById('in_'+tab_str+'_'+(i+3));
                	var radioObjList=document.getElementsByName(radioObj.name);
                	for(var j=0;j<radioObjList.length;j++)
                	{
                		if(radioObjList[j].value==propertyValue)
                		{
                			radioObjList[j].checked=true;
                		}
                	}
            	}
            }*/
		else if(document.getElementById('in_'+tab_str+'_'+(i+3)).type == "checkbox"
			|| document.getElementById('in_'+tab_str+'_'+(i+3)).type == "radio")
		{
			var checkObj=document.getElementById('in_'+tab_str+'_'+(i+3));
			var checkObjList=document.getElementsByName(checkObj.name);
			var checkValList = propertyValue.split(',');
			for(var j=0;j<checkObjList.length;j++)
			{
				if(searchInArray(checkValList,checkObjList[j].value) != -1)
				{
					checkObjList[j].checked=true;
				}
				else
				{
					checkObjList[j].checked=false;
				}
			}
		}
		//Code ended By Richi For elements of type Radio
		else
		{
			document.getElementById('in_'+tab_str+'_'+(i+3)).value = propertyValue;
		}
	}


	/////CHANGED UPTO HERE

	if(temp_a.onmouseup!="" || temp_a.onclick!="" || temp_a.href!="")
	{
		str_onmouseup="" + temp_a.onmouseup;
		str_onclick="" + temp_a.onclick;    
		str_href="" + temp_a.href;

//		str_onmouseup2=temp_a.onmouseup;
//		str_onclick2=temp_a.onclick;    
//		str_href2=temp_a.href;
		setVarFieldVal('str_onmouseup', tab_str, temp_a.onmouseup);
		setVarFieldVal('str_onclick', tab_str, temp_a.onclick);
		setVarFieldVal('str_href', tab_str, temp_a.href);

		validationFuncArr = _getValidationFunction(str_onmouseup);
		if(validationFuncArr[0] == "")
		{
			validationFuncArr = _getValidationFunction(str_onclick);
		}
		if(validationFuncArr[0] == "")
		{
			validationFuncArr = _getValidationFunction(str_href);
		}

		/*for(i=0;i<(str_onmouseup.length);i++)
          {
            if(str_onmouseup.charAt(i) == "{")
              break;
          }
          var temp_validationFunc=str_onmouseup.substr((i+2),(str_onmouseup.length-i));
          for(i=0;i<(temp_validationFunc.length);i++)
          {
            if(temp_validationFunc.charAt(i) == "a")
            {
              if(temp_validationFunc.charAt(i+1)=="d" && temp_validationFunc.charAt(i+2)=="d" && temp_validationFunc.charAt(i+3)=="r" && temp_validationFunc.charAt(i+4)=="o" && temp_validationFunc.charAt(i+5)=="w")
                break;
            }
          }
          if(i < 4 || i >= (temp_validationFunc.length-5))
            validationFunc="";
          else
          {
            validationFunc=temp_validationFunc.substr(0,i); 
          }
          for(j=(validationFunc.length-1);j>=0;j--)
          {
            if(j==0)
            {
              validationFunc="";
              break;
            }

            if(validationFunc.charAt(j)==")")
            {
              if(validationFunc.charAt(j-1)==")")
              ;
              else if(validationFunc.charAt(j-1)=="(")
                break;
            }
          }

          if(validationFunc=="")
          {
            for(i=0;i<(str_onclick.length);i++)
            {
                if(str_onclick.charAt(i) == "{")
                {
                    break;
                }
            }
            var temp_validationFunc=str_onclick.substr((i+2),(str_onclick.length-i));
            for(i=0;i<(temp_validationFunc.length);i++)
            {
              if(temp_validationFunc.charAt(i) == "a")
              {
                if(temp_validationFunc.charAt(i+1)=="d" && temp_validationFunc.charAt(i+2)=="d" && temp_validationFunc.charAt(i+3)=="r" && temp_validationFunc.charAt(i+4)=="o" && temp_validationFunc.charAt(i+5)=="w")
                  {
                        validationFunc = temp_validationFunc.substr(0, i);
                        break;
                  }
              }
            }

          }

          if(validationFunc=="")
          {
            for(i=0;i<(str_href.length);i++)
            {
              if(str_href.charAt(i) == ":")
                break;
            }

            var temp_validationFunc=str_href.substr((i+1),(str_href.length-i));
            for(i=0;i<(temp_validationFunc.length);i++)
            {
              if(temp_validationFunc.charAt(i) == "a")
              {
                if(temp_validationFunc.charAt(i+1)=="d" && temp_validationFunc.charAt(i+2)=="d" && temp_validationFunc.charAt(i+3)=="r" && temp_validationFunc.charAt(i+4)=="o" && temp_validationFunc.charAt(i+5)=="w")
                  break;
              }
            }

            if(i < 4 || i >= (temp_validationFunc.length-5))
              validationFunc="";
            else
            {
              validationFunc=temp_validationFunc.substr(0,i); 
            }

            for(j=(validationFunc.length-1);j>=0;j--)
            {
              if(j==0)
              {
                validationFunc="";
                break;
              }

              if(validationFunc.charAt(j)==")")
              {
                if(validationFunc.charAt(j-1)==")")
                ;
                else if(validationFunc.charAt(j-1)=="(")
                  break;
              }
            }
          }*/

		temp_a.onmouseup="";
		temp_a.onclick="";
		temp_a.href="javascript:doNothing();";
		temp_a.innerHTML = "Modify";

		//          var temp_img=document.getElementById("img_"+tab_str);
		//          temp_img.src= "Common/Images/Modify.jpg";
		//          temp_img.alt="Modify";
	}
	//temp_a.href="javascript:"+validationFunc+"modify_clicked('"+tab_str+"',"+str_onmouseup+","+str_onclick+",\""+str_href+"\",'"+showcols+"','"+rowno+"','"+cols+"');";
	temp_a.href="javascript:"+validationFuncArr[0]+"modify_clicked('"+tab_str+"','"+showcols+"','"+rowno+"','"+cols+"');"; // + validationFuncArr[1];
	newTextVal = " ";
	var tabledel = document.getElementById('id_'+tab_str+'_'+rowno+'_1'); 
	tabledel.name=" ";
	tabledel.innerHTML = newTextVal;

	// Code added by Varun to call a function on modify clicked in the table.
	var funcNameElement = document.getElementById(tab_str + '_onModifyFunction');
	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			window[funcName](rowno);
	}
}


//Aditi
function fn_ShowActView(tab_str,show_n,str_rowno,str_cols,flg)
{
	cols=parseInt(str_cols);
	rowno=parseInt(str_rowno);
	showcols=parseInt(show_n);
	var flag=false;
	var n=parseInt(document.getElementById('counter_'+tab_str).value);
	var newTextVal = "View";
	var_i=1;

	for(i=var_i;i<=n;i++)
	{

		if(trim(document.getElementById('id_'+tab_str+'_'+i+'_3').innerHTML)=="viewing" || trim(document.getElementById('id_'+tab_str+'_'+i+'_2').innerHTML)=="Modifying")
		{
			flag=true;
		}

	}
	if(trim(document.getElementById('id_'+tab_str+'_'+rowno+'_3').innerHTML)!="viewing" && !flag)
	{
		var temp_a=document.getElementById("a_"+tab_str);
		for(i=var_i;i<=n;i++)
		{
			var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_3');     
			if(tablemod!= null && tablemod.name=="viewing")
			{
				tablemod.innerHTML = newTextVal; 
				tablemod.name = newTextVal;
//				temp_a.onmouseup=str_onmouseup2;
//				temp_a.onclick=str_onclick2;
//				temp_a.href=str_href2;
				temp_a.onmouseup=getVarFieldVal('str_onmouseup', tab_str);
				temp_a.onclick=getVarFieldVal('str_onclick', tab_str);
				temp_a.href=getVarFieldVal('str_href', tab_str);
			}
		}

		newTextVal = "Delete";

		var newTextVal = "View";
		var tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_3');     
		tablemod.name="Viewing";
		tablemod.innerHTML = newTextVal; 
		for(i=4;i<(cols + 4);i++)
		{
			if(document.getElementById("id_"+tab_str+"_"+rowno+"_"+i).value=='' && (document.getElementById('in_'+tab_str+'_'+i).type == "select-one"))
				document.getElementById('in_'+tab_str+'_'+i).selectedIndex=0;
			else
				document.getElementById('in_'+tab_str+'_'+i).value=document.getElementById("id_"+tab_str+"_"+rowno+"_"+i).value;
		}
		//my change

		for(i=4;i<(cols + 4);i++)
			document.getElementById('in_'+tab_str+'_'+i).disabled = true;
		var temp_img=document.getElementById("a_"+tab_str);
		//avishek

		//avishek
		if(temp_img)
		{

			var div_tab = document.getElementById("td_"+tab_str);          
			div_tab.style.visibility = "hidden";
		}  
		cols=parseInt(str_cols);
		var newTextVal = "viewing";
		var newTextVal1 = "";
		var tabledef = document.getElementById('id_'+tab_str+'_'+str_rowno+'_3');
		var textdel = document.getElementById('id_temp_'+tab_str+'_'+str_rowno+'_3');

		if(trim(tabledef.innerHTML)=='View')
		{
			tabledef.innerHTML = newTextVal;
			tabledef.name="viewing";
			textdel.value="viewing";
			var tablemod = document.getElementById('id_'+tab_str+'_'+str_rowno+'_1'); 

			tablemod.name="";
			tablemod.innerHTML = newTextVal1; 
			var tablemod1 = document.getElementById('id_'+tab_str+'_'+str_rowno+'_2');     
			tablemod1.name="";
			tablemod1.innerHTML = newTextVal1; 
		}


	}
	else
	{
		alert("Please Clear/modify exsisting data");
	}
}

function clear_table_View(tab_str,str_cols)
{
	if(confirm("Are you sure to Clear the Details ?"))
	{
		cols=parseInt(str_cols);
		for(i=4;i<(cols+4);i++)
		{
			document.getElementById('in_'+tab_str+'_'+i).value="";
		}

		//var temp_img=document.getElementById("a_"+tab_str);
		//var temp_src=temp_img.src;
		//var ch=temp_src.charAt(temp_src.length - 5);

		var td_AddBtn = document.getElementById("td_"+tab_str);
		if(td_AddBtn)
		{
			td_AddBtn.style.visibility = "visible";
		}
		for(i=4;i<(cols + 4);i++)
			document.getElementById('in_'+tab_str+'_'+i).disabled = false;
		/*  if(ch=="y")
  {
    temp_img.src="Common/Images/Add.jpg";
    temp_img.alt="Add";
    var temp_a=document.getElementById("a_"+tab_str);
    temp_a.onmouseup=str_onmouseup2;
    temp_a.onclick=str_onclick2;
    temp_a.href=str_href2;
  }*/
		var n=parseInt(document.getElementById('counter_'+tab_str).value);

		var_i=1;

		var  newTextVal = "Delete";
		var  newTextVal2 = "View";
		var newTextVal3 = "Modify";
		for(i=var_i;i<=n;i++)
		{
			var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_1'); 
			var tablemod1 = document.getElementById('id_'+tab_str+'_'+i+'_3');
			var tablemod2= document.getElementById('id_'+tab_str+'_'+i+'_2');
			if(tablemod!= null && tablemod.name!="deleted")
			{

				tablemod.innerHTML = newTextVal; 
				tablemod1.innerHTML = newTextVal2;
				tablemod2.innerHTML = newTextVal3;
			}
		}
	}
}



function fn_ShowActModify_View(tab_str,show_n,str_rowno,str_cols,flg)
{
	var validationFuncArr = ['',''];
	cols=parseInt(str_cols);
	rowno=parseInt(str_rowno);
	showcols=parseInt(show_n);
	var flag=false;
	var n=parseInt(document.getElementById('counter_'+tab_str).value);
	var newTextVal = "Modify";
	var_i=1;

	for(i=var_i;i<=n;i++)
	{

		if(trim(document.getElementById('id_'+tab_str+'_'+i+'_2').innerHTML)=="Modifying" || trim(document.getElementById('id_'+tab_str+'_'+i+'_3').innerHTML)=="viewing")
		{
			flag=true;
		}
	}
	if(trim(document.getElementById('id_'+tab_str+'_'+rowno+'_2').innerHTML)!="Modifying" && !flag )
	{
		var temp_a=document.getElementById("a_"+tab_str);
		if(flg == "Modify")
		{
			for(i=var_i;i<=n;i++)
			{
				var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_2');     
				if(tablemod!= null && tablemod.name=="Modifying")
				{
					tablemod.innerHTML = newTextVal; 
					tablemod.name = newTextVal;
//					temp_a.onmouseup=str_onmouseup2;
//					temp_a.onclick=str_onclick2;
//					temp_a.href=str_href2;
					temp_a.onmouseup = getVarFieldVal('str_onmouseup', tab_str);
					temp_a.onclick = getVarFieldVal('str_onclick', tab_str);
					temp_a.href = getVarFieldVal('str_href', tab_str);
				}
			}
		}

		if(flg == "View")
		{
			for(i=var_i;i<=n;i++)
			{
				var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_3');     
				if(tablemod!= null && tablemod.name=="Viewing")
				{
					tablemod.innerHTML = newTextVal; 
					tablemod.name = newTextVal;
//					temp_a.onmouseup=str_onmouseup2;
//					temp_a.onclick=str_onclick2;
//					temp_a.href=str_href2;
					temp_a.onmouseup = getVarFieldVal('str_onmouseup', tab_str);
					temp_a.onclick = getVarFieldVal('str_onclick', tab_str);
					temp_a.href = getVarFieldVal('str_href', tab_str);
				}
			}
		}
		newTextVal = "Delete";

		for(i=var_i;i<=n;i++)
		{
			var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_1');     
			if(tablemod!= null && tablemod.name!="deleted")
				tablemod.innerHTML = newTextVal; 
		}

		var newTextVal = "Modifying";
		var tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_2');     
		tablemod.name="Modifying";
		tablemod.innerHTML = newTextVal; 
		for(i=4;i<(cols + 4);i++)
		{
			if(document.getElementById("id_"+tab_str+"_"+rowno+"_"+i).value=='' && (document.getElementById('in_'+tab_str+'_'+i).type == "select-one"))
				document.getElementById('in_'+tab_str+'_'+i).selectedIndex=0;
			else
				document.getElementById('in_'+tab_str+'_'+i).value=document.getElementById("id_"+tab_str+"_"+rowno+"_"+i).value;
		}


		if(temp_a.onmouseup!="" || temp_a.onclick!="" || temp_a.href!="")
		{
			str_onmouseup="" + temp_a.onmouseup;
			str_onclick="" + temp_a.onclick;    
			str_href="" + temp_a.href;

//			str_onmouseup2=temp_a.onmouseup;
//			str_onclick2=temp_a.onclick;    
//			str_href2=temp_a.href;
			setVarFieldVal('str_onmouseup', tab_str, temp_a.onmouseup);
			setVarFieldVal('str_onclick', tab_str, temp_a.onclick);
			setVarFieldVal('str_href', tab_str, temp_a.href);

			validationFuncArr = _getValidationFunction(str_onmouseup);
			if(validationFuncArr[0] == "")
			{
				validationFuncArr = _getValidationFunction(str_onclick);
			}
			if(validationFuncArr[0] == "")
			{
				validationFuncArr = _getValidationFunction(str_href);
			}

			/*for(i=0;i<(str_onmouseup.length);i++)
          {
            if(str_onmouseup.charAt(i) == "{")
              break;
          }
          var temp_validationFunc=str_onmouseup.substr((i+2),(str_onmouseup.length-i));
          for(i=0;i<(temp_validationFunc.length);i++)
          {
            if(temp_validationFunc.charAt(i) == "a")
            {
              if(temp_validationFunc.charAt(i+1)=="d" && temp_validationFunc.charAt(i+2)=="d" && temp_validationFunc.charAt(i+3)=="r" && temp_validationFunc.charAt(i+4)=="o" && temp_validationFunc.charAt(i+5)=="w")
                break;
            }
          }
          if(i < 4 || i >= (temp_validationFunc.length-5))
            validationFunc="";
          else
          {
            validationFunc=temp_validationFunc.substr(0,i); 
          }
          for(j=(validationFunc.length-1);j>=0;j--)
          {
            if(j==0)
            {
              validationFunc="";
              break;
            }

            if(validationFunc.charAt(j)==")")
            {
              if(validationFunc.charAt(j-1)==")")
              ;
              else if(validationFunc.charAt(j-1)=="(")
                break;
            }
          }

          if(validationFunc=="")
          {
            for(i=0;i<(str_onclick.length);i++)
            {
              if(str_onclick.charAt(i) == "{")
                break;
            }
            var temp_validationFunc=str_onclick.substr((i+2),(str_onclick.length-i));
            for(i=0;i<(temp_validationFunc.length);i++)
            {
              if(temp_validationFunc.charAt(i) == "a")
              {
                if(temp_validationFunc.charAt(i+1)=="d" && temp_validationFunc.charAt(i+2)=="d" && temp_validationFunc.charAt(i+3)=="r" && temp_validationFunc.charAt(i+4)=="o" && temp_validationFunc.charAt(i+5)=="w")
                  break;
              }
            }
            if(i < 4 || i >= (temp_validationFunc.length-5))
              validationFunc="";
            else
            {
              validationFunc=temp_validationFunc.substr(0,i); 
            }

            for(j=(validationFunc.length-1);j>=0;j--)
            {
              if(j==0)
              {
                validationFunc="";
                break;
              }

              if(validationFunc.charAt(j)==")")
              {
                if(validationFunc.charAt(j-1)==")")
                ;
                else if(validationFunc.charAt(j-1)=="(")
                  break;
              }
            }
          }

          if(validationFunc=="")
          {
            for(i=0;i<(str_href.length);i++)
            {
              if(str_href.charAt(i) == ":")
                break;
            }

            var temp_validationFunc=str_href.substr((i+1),(str_href.length-i));
            for(i=0;i<(temp_validationFunc.length);i++)
            {
              if(temp_validationFunc.charAt(i) == "a")
              {
                if(temp_validationFunc.charAt(i+1)=="d" && temp_validationFunc.charAt(i+2)=="d" && temp_validationFunc.charAt(i+3)=="r" && temp_validationFunc.charAt(i+4)=="o" && temp_validationFunc.charAt(i+5)=="w")
                  break;
              }
            }

            if(i < 4 || i >= (temp_validationFunc.length-5))
              validationFunc="";
            else
            {
              validationFunc=temp_validationFunc.substr(0,i); 
            }

            for(j=(validationFunc.length-1);j>=0;j--)
            {
              if(j==0)
              {
                validationFunc="";
                break;
              }

              if(validationFunc.charAt(j)==")")
              {
                if(validationFunc.charAt(j-1)==")")
                ;
                else if(validationFunc.charAt(j-1)=="(")
                  break;
              }
            }
          }*/

			temp_a.onmouseup="";
			temp_a.onclick="";
			temp_a.href="javascript:doNothing();";
			temp_a.innerHTML = "Modify";

			//var temp_img=document.getElementById("img_"+tab_str);
			//temp_img.src= "Common/Images/Modify.jpg";
			//temp_img.alt="Modify";

		}

		//temp_a.href="javascript:"+validationFunc+"modify_clicked_View('"+tab_str+"',"+str_onmouseup+","+str_onclick+",\""+str_href+"\",'"+showcols+"','"+rowno+"','"+cols+"');";
		temp_a.href="javascript:"+validationFuncArr[0]+"modify_clicked_View('"+tab_str+"','"+showcols+"','"+rowno+"','"+cols+"')";// + validationFuncArr[1];
		newTextVal = "";
		var tabledel = document.getElementById('id_'+tab_str+'_'+rowno+'_1'); 
		tabledel.name=" ";
		tabledel.innerHTML = newTextVal;

		var tableview = document.getElementById('id_'+tab_str+'_'+rowno+'_3'); 
		tableview.name=" ";
		tableview.innerHTML = newTextVal;
	}
	else
	{
		alert("Please Clear/Modify the exsisting row");
	}
}

function  modify_clicked_View(tab_str,show_n,str_rowno,str_cols)
{
	cols=parseInt(str_cols);
	rows=parseInt(str_rowno);
	showcols=parseInt(show_n);
	for(i=4;i<(showcols + 4);i++)
	{
		if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
		{
			var comboval = document.getElementById('in_'+tab_str+'_'+i);
			document.getElementById("id_td_"+tab_str+"_"+rows+"_"+i).innerHTML=comboval.options[comboval.selectedIndex].text;
		}
		else
		{
			document.getElementById("id_td_"+tab_str+"_"+rows+"_"+i).innerHTML=document.getElementById('in_'+tab_str+'_'+i).value;
		}
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		document.getElementById("id_td_"+tab_str+"_"+rows+"_"+i).appendChild(txt_node);
	}
	for(i=3+showcols;i<(cols + 3);i++)
	{
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		document.getElementById("id_td_"+tab_str+"_"+rows+"_"+(showcols+3-1)).appendChild(txt_node); 
	}

	//var temp_img=document.getElementById("a_"+tab_str);
	//temp_img.src= "Common/Images/Add.jpg";
	// temp_img.alt="Add";
	var temp_a=document.getElementById("a_"+tab_str);
//	temp_a.onmouseup=str_onmouseup2;
//	temp_a.onclick=str_onclick2;
//	temp_a.href=str_href2;
	temp_a.onmouseup = getVarFieldVal('str_onmouseup', tab_str);
	temp_a.onclick = getVarFieldVal('str_onclick', tab_str);
	temp_a.href = getVarFieldVal('str_href', tab_str);
	temp_a.innerHTML = "Add";

	var n=parseInt(document.getElementById('counter_'+tab_str).value);

	newTextVal = "Delete";
	newTextVal1 ="View";
	var newTextVal2 = "Modify";
	for(i=var_i;i<=n;i++)
	{

		var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_1');  
		var tableView = document.getElementById('id_'+tab_str+'_'+i+'_3');
		var tablemod1 = document.getElementById('id_'+tab_str+'_'+i+'_2');
		if(tablemod!= null && tablemod.name!="deleted")
		{
			tablemod.innerHTML = newTextVal; 
			tableView.innerHTML=newTextVal1;
			tablemod1.innerHTML = newTextVal2; 
		}
	}
	rows=document.getElementById("counter_"+tab_str).value;
	calTotal(tab_str,rows,cols);
}


///Aditi



function addrowView1(tab_str,show_n,str_n,start)
{

	var cols=parseInt(str_n);
	var showcols=parseInt(show_n);
	var empty=0;

	var tbl = document.getElementById(tab_str);
	var rows = tbl.rows.length;
	var row = tbl.insertRow(rows);
	row.className="whitepapartd";
	row.style.textAlign = "center";
	var sr_no = row.insertCell(0);
	if(document.getElementById("start_row_"+tab_str)!=null)
		var textNode = document.createTextNode(rows-parseInt(document.getElementById("start_row_"+tab_str).value)+1);
	else
		var textNode = document.createTextNode(rows);
	sr_no.appendChild(textNode);

	var delete_col = row.insertCell(1);
	//Start - for hidden Delete Field
	var txt_node = document.createElement('input');
	txt_node.setAttribute('type','hidden'); 
	txt_node.setAttribute('name',tab_str+'_'+rows+'_1'); 
	txt_node.setAttribute('id','id_temp_'+tab_str+'_'+rows+'_1');
	txt_node.setAttribute('value','Delete');
	delete_col.appendChild(txt_node);
	//End - for hidden Delete Field

	var textnodeDelete =  document.createElement('a');
	textnodeDelete.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'1');
	textnodeDelete.setAttribute('name','Delete');
	textnodeDelete.setAttribute('href','javascript:fn_ShowActDelete_View("'+tab_str+'","'+rows+'","'+cols+'");');
	var DeletelinkText=document.createTextNode('Delete');
	textnodeDelete.appendChild(DeletelinkText);
	delete_col.appendChild(textnodeDelete);

	var modify_col = row.insertCell(2);
	var textnodemodify =  document.createElement('a');
	textnodemodify.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'2');
	textnodemodify.setAttribute('name','Modify');
	textnodemodify.setAttribute('href','javascript:fn_ShowActModify_View("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'","Modify");');
	var ModifylinkText=document.createTextNode('Modify');
	textnodemodify.appendChild(ModifylinkText);
	modify_col.appendChild(textnodemodify);


	//Aditi
	var View_col = row.insertCell(3);
	//Start - for hidden Delete Field
	var txt_node = document.createElement('input');
	txt_node.setAttribute('type','hidden'); 
	txt_node.setAttribute('name',tab_str+'_'+rows+'_3'); 
	txt_node.setAttribute('id','id_temp_'+tab_str+'_'+rows+'_3');
	txt_node.setAttribute('value','View');
	View_col.appendChild(txt_node);
	//End - for hidden Delete Field

	var textnodeView =  document.createElement('a');
	textnodeView.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'3');
	textnodeView.setAttribute('name','View');
	textnodeView.setAttribute('href','javascript:fn_ShowActView("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'","View");');
	var ViewlinkText=document.createTextNode('View');
	textnodeView.appendChild(ViewlinkText);
	View_col.appendChild(textnodeView);
//	Aditi              
	for(var i=4;i<(showcols + 4);i++)
	{
		var node = row.insertCell(i);

		node.setAttribute('id','id_td_'+tab_str+'_'+rows+'_'+i);

		if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
		{
			var comboval = document.getElementById('in_'+tab_str+'_'+i);
			node.innerHTML = comboval.options[comboval.selectedIndex].text;
		}
		else
		{
			node.innerHTML = document.getElementById('in_'+tab_str+'_'+i).value;
		}
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		node.appendChild(txt_node);
	}
	//for hidden cols
	for(var i=3+showcols;i<(cols + 3);i++)
	{
		//var node = row.insertCell(i);
		var txt_node = document.createElement('input');
		txt_node.setAttribute('type','hidden'); 
		txt_node.setAttribute('name',tab_str+'_'+rows+'_'+i); 
		txt_node.setAttribute('id','id_'+tab_str+'_'+rows+'_'+i);
		txt_node.setAttribute('value',document.getElementById('in_'+tab_str+'_'+i).value);
		document.getElementById('in_'+tab_str+'_'+i).value="";
		node.appendChild(txt_node);
	}
	// end for hidden cols

	document.getElementById("counter_"+tab_str).value=rows; 
	document.getElementById("start_"+tab_str).value=start;





	calTotal(tab_str,rows,cols);
}
//avishek delete
function fn_ShowActDelete_View(tab_str,str_rowno,str_cols)
{


	if(document.getElementById('id_'+tab_str+'_'+str_rowno+'_1').name != "deleted")
	{
		if(confirm("Are you sure to delete this Record?"))
		{
			cols=parseInt(str_cols);
			var newTextVal = "deleted";
			var newTextVal1 = "";
			var tabledef = document.getElementById('id_'+tab_str+'_'+str_rowno+'_1');
			var textdel = document.getElementById('id_temp_'+tab_str+'_'+str_rowno+'_1');
			if(trim(tabledef.innerHTML)=='Delete')
			{
				tabledef.innerHTML = newTextVal;
				tabledef.name="deleted";
				textdel.value="deleted";
				var tablemod = document.getElementById('id_'+tab_str+'_'+str_rowno+'_2');     
				tablemod.name="";
				tablemod.innerHTML = newTextVal1; 
				var tablemod1 = document.getElementById('id_'+tab_str+'_'+str_rowno+'_3');     
				tablemod1.name="";
				tablemod1.innerHTML = newTextVal1; 
			}
			rows=document.getElementById("counter_"+tab_str).value;
			calTotal(tab_str,rows,cols);
		}
	}

}
function fn_ShowActViewRow(tab_str,str_rowno,str_cols)
{
	cols=parseInt(str_cols);
	rowno=parseInt(str_rowno);
	var funcNameElement = document.getElementById(tab_str + '_beforeOnViewFunction');
	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			if(window[funcName](rowno) === false)
				return;
	}
	var n=parseInt(document.getElementById('counter_'+tab_str).value);
	var newTextVal = "View";
	var_i=1;
	for(i=var_i;i<=n;i++)
	{
		var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_1');     
		if(tablemod.name=="Viewing")
			tablemod.innerHTML = newTextVal; 
	}

	var newTextVal = "Viewing";
	var tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_1');     
	tablemod.name="Viewing";
	tablemod.innerHTML = newTextVal; 

	for(i=3;i<(cols + 3);i++)
	{
		if(document.getElementById("id_"+tab_str+"_"+rowno+"_"+i).value!="")
			document.getElementById('in_'+tab_str+'_'+i).value=document.getElementById("id_"+tab_str+"_"+rowno+"_"+i).value;
	}
	funcNameElement = document.getElementById(tab_str + '_onViewFunction');

	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			window[funcName](rowno);
	}
}
function fn_ShowActClearRow(tab_str,str_rowno,str_cols)
{
	cols=parseInt(str_cols);
	rowno=parseInt(str_rowno);
	for(i=3;i<(cols+3);i++)
	{
		document.getElementById('in_'+tab_str+'_'+i).value="";
	}
	var funcNameElement = document.getElementById(tab_str + '_beforeOnClearFunction');
	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			if(window[funcName](rowno) === false)
				return;
	}
	var n=parseInt(document.getElementById('counter_'+tab_str).value);
	var newTextVal = "View";
	var_i=1;
	for(i=var_i;i<=n;i++)
	{
		var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_1');     
		if(tablemod.name=="Viewing")
			tablemod.innerHTML = newTextVal; 
	}
	funcNameElement = document.getElementById(tab_str + '_onClearFunction');

	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			window[funcName](rowno);
	}
}

function clear_table(tab_str,str_cols)
{
	if(confirm("Are you sure to Clear the Details ?"))
	{
		cols=parseInt(str_cols);
		for(i=3;i<(cols+3);i++)
		{
			clearField(document.getElementById('in_'+tab_str+'_'+i));
		}

//		var temp_img=document.getElementById("img_"+tab_str);
		var temp_img=document.getElementById("a_"+tab_str);
		var temp_src=temp_img.innerHTML;
//		var temp_src=temp_img.src;
		var ch=temp_src.charAt(temp_src.length - 1);
		if(ch=="y")
		{
			temp_img.innerHTML = "Add";
//			temp_img.onmouseup=str_onmouseup2;
//			temp_img.onclick=str_onclick2;
//			temp_img.href=str_href2;
			temp_img.onmouseup = getVarFieldVal('str_onmouseup', tab_str);
			temp_img.onclick = getVarFieldVal('str_onclick', tab_str);
			temp_img.href = getVarFieldVal('str_href', tab_str);

//			temp_img.src="Common/Images/Add.jpg";
//			temp_img.alt="Add";
//			var temp_a=document.getElementById("a_"+tab_str);
//			temp_a.onmouseup=str_onmouseup2;
//			temp_a.onclick=str_onclick2;
//			temp_a.href=str_href2;
		}
		var n=parseInt(document.getElementById('counter_'+tab_str).value);
		var newTextVal = "Modify";
		var_i=1;
		for(i=var_i;i<=n;i++)
		{
			var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_2');     
			if(tablemod!= null && tablemod.name=="Modifying")
			{
				tablemod.innerHTML = newTextVal;
				tablemod.name = newTextVal;
			}
		}
		newTextVal = "Delete";

		for(i=var_i;i<=n;i++)
		{
			var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_1');     
			if(tablemod!= null && trim(tablemod.innerHTML)!="deleted")
				tablemod.innerHTML = newTextVal; 
		}
		return true;
	}
	return false;
}

function clearall(tab_str)
{
	var n=parseInt(document.getElementById('counter_'+tab_str).value);
	tbl = document.getElementById(tab_str);
	for(i=1;i<=n;i++){
		tbl.deleteRow(1);
	}
	document.getElementById('counter_'+tab_str).value = "0";
	/*
	 * 
  var temp_img=document.getElementById("img_"+tab_str);
  var temp_src=temp_img.src;
  var ch=temp_src.charAt(temp_src.length - 5);
  if(ch=="y")
  {
    temp_img.src="Common/Images/Add.jpg";
    temp_img.alt="Add";
    var temp_a=document.getElementById("a_"+tab_str);
    temp_a.onmouseup=str_onmouseup2;
    temp_a.onclick=str_onclick2;
    temp_a.href=str_href2;
  }
	 */
}
//Added By Nitin(602635)
//Date :- 16-July-2008
//For Validating Special character in TextArea

function checkTextareaLength_msgBox(field,maxlimit)
{
	if (field.value.length > maxlimit) 
	{ 
		alert("You have exceeded the Maximum limit of " + maxlimit + ".");
		field.focus();
		return false;
	}
	var len,str,str1,i;
	len=field.value.length;
	str=field.value;
	str1="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%&(),-.\ n";  

	for(i=0;i<len;i++)
	{
		if((str1.indexOf(str.charAt(i)))==-1)
		{
			if(str.charAt(i) != '\n' && str.charAt(i) != '\r')
			{
				alert("You can Enter Alphabets or Numbers or %&(),-. in the field");
				field.focus();
				return false;
			}
		}
	}

	return true;
}


function checkTextAreaOnKeyPress(field,maxlimit,e)
{
	checkTextareaLength(field,maxlimit);
	var lastChar;
	var keynum;
	if(window.event) // IE
	{
		keynum = e.keyCode;
	}
	else if (e) 
	{
		keycode = e.which; // other than IE
	}
	lastChar = String.fromCharCode(keynum);
	if ((keynum > 32 && keynum < 48) || (keynum > 57 && keynum < 65) || (keynum > 90 && keynum < 97) || keynum==126)
	{
		//  % & ,  -  . are allowed here
		if( keynum==37 || keynum==38  || keynum==44 || keynum==45 || keynum==46 )
			return true;
		else
			return false;
	}
	else
	{
		return true
	}
}

function checkTextareaLength(field,maxlimit) 
{
	if (field.value.length > maxlimit-1) 
		field.value = field.value.substring(0, maxlimit-1);
}
//Ended By Nitin

//Added by Tapan  for Clearing Dynanmic build Table Starts....
//It Takes Table Name and deletes all rows except 0th which is header row.
function clearDynamicTable(tab_str)
{

	var temp_img=document.getElementById("a_"+tab_str);
	var temp_src=temp_img.innerHTML;

	var ch=temp_src.charAt(temp_src.length - 1);
	if(ch=="y")
	{
		temp_img.innerHTML = "Add";
//		temp_img.onmouseup=str_onmouseup2;
//		temp_img.onclick=str_onclick2;
//		temp_img.href=str_href2;
		temp_img.onmouseup = getVarFieldVal('str_onmouseup', tab_str);
		temp_img.onclick = getVarFieldVal('str_onclick', tab_str);
		temp_img.href = getVarFieldVal('str_href', tab_str);
	}
	var myTableBody = document.getElementById(tab_str);
	var counter = document.getElementById("counter_"+tab_str).value;
	for (i=counter;i>0;i--)
	{
		myTableBody.deleteRow(i);
	}
	document.getElementById("start_"+tab_str).value=0;
	document.getElementById("counter_"+tab_str).value=0;
	document.getElementById("start_row_"+tab_str).value=1;
}
//Added by Tapan  for Clearing Dynanmic build Table Ends

/**
 * This is a class declaration for HashMap type declaration
 * @return
 */
function HashMap()
{
	this.put = function(key,value){this[key]=value;};
	this.get = function(key){if(this[key])return this[key];else return null;};
}

//This variable is used to store the values of the onclick, href values of the button in add row.
var _jsHashMap = new HashMap();

/**
 * To store the variable value in the javascript hashmap.
 * @param varName
 * @param tab_str
 * @param value
 * @return
 */
function setVarFieldVal(varName, tab_str, value)
{
	_jsHashMap.put(varName + "_" + tab_str, value);
}

/**
 * To get the value from a variable stored in the javascript hashmap.
 * @param varName
 * @param tab_str
 * @return
 */
function getVarFieldVal(varName, tab_str)
{
	return _jsHashMap.get(varName + "_" + tab_str);
}

/**
 * To get value of a cell with particular row and column
 * @param tab_str
 * @param rowno starting from 1 or startRowIndex
 * @param colno starting from 0
 * @return value of the column of the row from the table
 */
function getTableColumnValClassic(tab_str, rowno, colno)
{
	var node = document.getElementById('id_'+tab_str+'_'+rowno);
	if(node != null)
	{
		var rowValue = node.value;
		var colValList = rowValue.split(columnsDelimiter);

		if(colValList.length > colno)
		{
			var colVal = colValList[colno];
			var colValArr = colVal.split(propertyValueDelimiter);
			if(colValArr.length == 2)
				return colValArr[1];
			else
				return '';
		}
	}
}

function getTableColumnVal(tab_str, rowno, colno)
{
	return getTableColumnValClassic(tab_str, rowno, colno);
}

/**
 * The function gives the count of the number of records added in the table.
 * It wont count the deleted records.
 * @param tab_str table name of the table.
 * @return count of the number of active rows
 */
function getActiveRowCountFromTable(tab_str)
{
	var tbl = document.getElementById(tab_str);
	var rows = tbl.rows.length;
	var startRow = 1;
	var count = 0;
	var delNode = null;
	if(document.getElementById("start_row_"+tab_str)!=null)
	{
		startRow = Number(document.getElementById("start_row_"+tab_str).value);
	}

	for(rowno = startRow; rowno<rows; rowno++)
	{
		delNode = document.getElementById('id_temp_'+tab_str+'_'+rowno+'_1');
		if(delNode != null && delNode.value=='deleted')
		{
			// do no add
		}
		else
		{
			count++;
		}
	}

	return count;
}

/**
 * This function is used to get the value of the update/delete flag of a row
 * @param tab_str
 * @param rowno
 * @return
 */
function getUpdateDeleteFlag(tab_str, rowno)
{
	var flagVal = '';
	var txt_node = document.getElementById('id_'+tab_str+'_'+rowno);
	if(txt_node != null && txt_node.value != '')
	{
		var colValList = txt_node.value.split(columnsDelimiter);
		var colVal = colValList[colValList.length-1];
		var colValArr = colVal.split(propertyValueDelimiter);	
		if(colValArr.length == 2)
		{
			if(colValArr[0] == 'addRowRecordType')
			{
				flagVal = colValArr[1];
			}
		}
	}
	return flagVal;
}

/**
 * This function is used to update the update/delete flag value
 * @param tab_str
 * @param rowno
 * @param flagVal
 * @return
 */
function setUpdateDeleteFlag(tab_str, rowno, flagVal)
{
	var txt_node = document.getElementById('id_'+tab_str+'_'+rowno);
	var txtValNew = '';
	if(txt_node != null && txt_node.value != '')
	{
		var colValList = txt_node.value.split(columnsDelimiter);
		for(i=0; i<colValList.length-1; i++)
		{
			txtValNew += colValList[i] + columnsDelimiter;
		}
		var colVal = colValList[colValList.length-1];
		var colValArr = colVal.split(propertyValueDelimiter);

		if(colValArr[0] == 'addRowRecordType')
		{
			txtValNew += 'addRowRecordType' + propertyValueDelimiter + flagVal;
		}
		else
		{
			txtValNew = txt_node.value + 'addRowRecordType' + propertyValueDelimiter + flagVal;
		}
	}
	txt_node.setAttribute("value", txtValNew);
//	alert(txtValNew);
}

function getPropertyShowValue(fieldObj) 
{
	var propertyShowVal = "";
	if (fieldObj.type == "select-one")// For Combo Box
	{
		var comboval = fieldObj;
		var comboValText = comboval.options[comboval.selectedIndex].text;
		var comboValValue = comboval.options[comboval.selectedIndex].value;
		if (comboValValue != '')
			propertyShowVal = comboValText;
		else
			propertyShowVal = '&nbsp;';
	}
	else if (fieldObj.type == "checkbox" || fieldObj.type == "radio")// For checkbox
	{
		var checkObj = fieldObj;
		var checkObjList = document.getElementsByName(checkObj.name);
		var checkValArr = [];
		for ( var j = 0; j < checkObjList.length; j++) {
			if (checkObjList[j].checked) {
				checkValArr.push(checkObjList[j].value);
			}
		}
		if (checkValArr.length > 0)
			propertyShowVal = checkValArr.join(",");
		else
			propertyShowVal = '&nbsp;';
	} 
	else 
	{
		if (fieldObj.value == '') 
		{
			propertyShowVal = '&nbsp;';
		} 
		else 
		{
			propertyShowVal = fieldObj.value;
		}
	}
	return propertyShowVal;
}

function getPropertyHiddenValue(fieldObj) {
	var value = "";
	if (fieldObj.type == "checkbox" || fieldObj.type == "radio") {
		var checkObj = fieldObj;
		var checkObjList = document.getElementsByName(checkObj.name);
		var checkValArr = [];
		for ( var j = 0; j < checkObjList.length; j++) {
			if (checkObjList[j].checked) {
				checkValArr.push(checkObjList[j].value);
			}
		}
		value = checkObj.name + propertyValueDelimiter + checkValArr.join(",") + columnsDelimiter;
	} else if (fieldObj.value == '') {
		value = fieldObj.name + propertyValueDelimiter + columnsDelimiter;
	} else {
		value = fieldObj.name + propertyValueDelimiter + fieldObj.value + columnsDelimiter;
	}

	return value;
}

function _getValidationFunction(str_href)
{	
	//alert(str_href);
	var validationFuncArr = ['',''];
	var addRowStartIndex = str_href.indexOf('addrow');
	var addRowEndIndex = str_href.indexOf(')', addRowStartIndex);
	//alert(addRowStartIndex + ' ' + addRowEndIndex + ' ' + str_href.length);
	var addRowStartStr = "";
	if(addRowStartIndex > 0)
		addRowStartStr = str_href.substring(0, addRowStartIndex);

	var addRowEndStr = "";
	if(addRowEndIndex < str_href.length)
		addRowEndStr = str_href.substring(addRowEndIndex+1, str_href.length);


	if(addRowStartStr.indexOf("function") != -1)
	{
		var tmpIndex = addRowStartStr.indexOf("{");
		addRowStartStr = addRowStartStr.substring(tmpIndex + 1);

		tmpIndex = addRowEndStr.lastIndexOf("}");
		addRowEndStr = addRowEndStr.substring(0, tmpIndex);
	}

	//alert(addRowStartStr + '\n' + addRowEndStr);
	validationFuncArr[0] = addRowStartStr;
	validationFuncArr[1] = addRowEndStr;

	return validationFuncArr;
}

function isEmptyTable(tableId)
{    
	var count_row=document.getElementById("counter_"+tableId).value;     
	var i=1;   
	if(! count_row > 0 )
	{   
		return false;
	}
	else{    
		while(i<=count_row)
		{ 
			if(document.getElementById("id_"+tableId+"_"+i+"_2").name=="Modify")
			{             
				return true;             
			}
			i++;
		}
	}  
	return false;
}
/**
 * Function clears the field, whether combo box, text, radio or checkbox
 * @param fieldObj
 * @return
 * @author Agam Jain
 */
function clearField(fieldObj)
{
	if (fieldObj.type == "radio" || fieldObj.type == "checkbox")
	{
		var fieldObjList = document.getElementsByName(fieldObj.name);
		for ( var j = 0; j < fieldObjList.length; j++) 
		{
			fieldObjList[j].checked = false;
		}
	}
	else
	{
		fieldObj.value = "";
		//removeClass(fieldObj,'textInvalid');
	}
}
/**
 * Function remove class
 * @param fieldObj
 * @param className
 * @return
 * @author Agam Jain
 */
function removeClass(obj, className)
{
	if(obj)
	{
		if(obj.type == 'select-one' || typeof(obj.length) == 'undefined')
		{
			obj.className = obj.className.replace(className, '');
		}
		else
		{
			for(var i=0; i<fldObj.length; i++)
			{
				obj[i].className = obj[i].className.replace(className, '');
			}
		}
	}
}
function searchInArray (valList,val){
	for(var i=0; i<valList.length;i++)
	{
		if(val!='' && valList[i]!='' && val == valList[i])
			return 0;
		else 
			return -1;
	}
}

/**
 * This method is used to check whether any table of the form is in modifying state.
 * This method has parameter of 2-D array having table name and id of all tables.
 * @param tabArr
 * @returns {Boolean}
 */
function checkModifyingData(tabArr){
	var sectionName='';
	for(var m=0;m<tabArr.length;m++){
		var tab = tabArr[m];
		var tab_id = tab[0];
		var srcTable = document.getElementById(tab_id);
		for (var r = 1; r < srcTable.rows.length; r++){
			if(document.getElementById('id_'+tab_id+'_'+r+'_2').name=='Modifying')
			{
				if(sectionName==''){
					sectionName=tab[1];
				}else{
					sectionName=sectionName+'@@'+tab[1];    
				}
			}
		}	
	}
	if(sectionName!=''){
		var msgArr = sectionName.split('@@');
		var msg = '';
		for(var n=0;n<msgArr.length;n++){
			if(msg==''){
				msg=(n+1)+'.The '+msgArr[n]+' section is having a row in modifying state.';
			}else{
				msg=msg+'\n'+(n+1)+'.The '+msgArr[n]+' section is having a row in modifying state.';
			}
		}
		alert(msg);
		return false;
	}
	return true;
}


//TESTING


//============= Addrow with Delete, Modify and View ===================

function addrow_VMD(tab_str,show_n,str_n,start,fn_name_delete,fn_name_modify, hideDeleteFlag, hideModifyFlag)
{
	var cols=parseInt(str_n);
	var showcols=parseInt(show_n);
    var empty=0;
    var tbl = document.getElementById(tab_str);
    var rows = tbl.rows.length;
    
    var row = tbl.insertRow(rows);
    row.className="tabledata";
    row.style.textAlign = "center";
    var sr_no = row.insertCell(0);
    if(document.getElementById("start_row_"+tab_str)!=null)
        var textNode = document.createTextNode(rows-parseInt(document.getElementById("start_row_"+tab_str).value)+1);
    else
        var textNode = document.createTextNode(rows);
    sr_no.appendChild(textNode);
    
 
    var delete_col = row.insertCell(1);
        /**Added By Kandarp Start*/
        var deleteLinkName = "Delete";
        if(document.getElementById(tab_str+'_deleteLinkName')){
            deleteLinkName = document.getElementById(tab_str+'_deleteLinkName').value;
        } else {
            /*Do nothing*/
        }
        var modifyLinkName = "Modify";
        if(document.getElementById(tab_str+'_modifyLinkName')){
            modifyLinkName = document.getElementById(tab_str+'_modifyLinkName').value;
        } else {
            /*Do nothing*/
        }
        /**Added By Kandarp End*/
    if (hideDeleteFlag == 'Y' || hideDeleteFlag == 'y')
        delete_col.style.display="none";
    
    //Start - for hidden Delete Field
   	var txt_node = document.createElement('input');
   	txt_node.setAttribute('type','hidden'); 
  	txt_node.setAttribute('name',tab_str+'_'+rows+'_1'); 
    txt_node.setAttribute('id','id_temp_'+tab_str+'_'+rows+'_1');
    txt_node.setAttribute('value','Delete');
    delete_col.appendChild(txt_node);
    //End - for hidden Delete Field
    
    var textnodeDelete =  document.createElement('a');
    textnodeDelete.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'1');
    textnodeDelete.setAttribute('name','Delete');
    if(fn_name_delete==undefined || fn_name_delete=='')                
        textnodeDelete.setAttribute('href','javascript:fn_ShowActDelete_VMD("'+tab_str+'","'+rows+'","'+cols+'","'+showcols+'");');
    else
    {    
        textnodeDelete.setAttribute('href','javascript:fn_ShowActDelete_VMD("'+tab_str+'","'+rows+'","'+cols+'","'+showcols+'");javascript:'+fn_name_delete+'("'+tab_str+'","'+rows+'","'+cols+'");');        
    }
    var DeletelinkText=document.createTextNode(deleteLinkName);
    
    textnodeDelete.appendChild(DeletelinkText);
    delete_col.appendChild(textnodeDelete);

    var modify_col = row.insertCell(2);
    if (hideModifyFlag == 'Y' || hideModifyFlag == 'y')
        modify_col.style.display="none";
    var textnodemodify =  document.createElement('a');
    textnodemodify.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'2');
    textnodemodify.setAttribute('name','Modify');
    if(fn_name_modify==undefined || fn_name_modify == '')   
        textnodemodify.setAttribute('href','javascript:fn_ShowActModify_VMD("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'");');                                            
    else
        textnodemodify.setAttribute('href','javascript:fn_ShowActModify_VMD("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'");javascript:' + fn_name_modify+ '("'+tab_str+'","'+showcols + '","' +rows +'","'+cols+'");');                
        
    var ModifylinkText=document.createTextNode(modifyLinkName);
    textnodemodify.appendChild(ModifylinkText);
    modify_col.appendChild(textnodemodify);
    
    
    var view_col = row.insertCell(3);
	var textnodeview =  document.createElement('a');
	textnodeview.setAttribute('id','id_'+tab_str+'_'+rows+'_'+'3');
	textnodeview.setAttribute('name','View');
	textnodeview.setAttribute('href','javascript:fn_ShowActView_VMD("'+tab_str+'","'+showcols+'","'+rows+'","'+cols+'","View");');
	var ViewlinkText=document.createTextNode('View');
	textnodeview.appendChild(ViewlinkText);
	view_col.appendChild(textnodeview);
        
        //Below for loop is for visible columns
        
        var txt_node = document.createElement('input');
        txt_node.setAttribute('type','hidden'); 
        txt_node.setAttribute('name',tab_str+'_'+rows); 
        txt_node.setAttribute('id','id_'+tab_str+'_'+rows);
        var value = '';
        
        for(var i=4;i<(showcols + 4);i++)
        {
        	var node = row.insertCell(i);
        	node.setAttribute('id','id_td_'+tab_str+'_'+rows+'_'+i);
        	if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
        	{
        		var comboval = document.getElementById('in_'+tab_str+'_'+i);
        		if(comboval.value == '')
        		{
        			node.innerHTML = '&nbsp;';
        		}
        		else
        		{
        			node.innerHTML = comboval.options[comboval.selectedIndex].text;
        		}
          }
          else
          {
        	 if (document.getElementById('in_'+tab_str+'_'+i).value == '') 
        	 {
        		 node.innerHTML = '&nbsp;';   
        	 }
        	 else
        	 {
        		 node.innerHTML = document.getElementById('in_'+tab_str+'_'+i).value;
        		//Added By janhavi on 11.06.2012 for right alignment of currency type fields
                 if((document.getElementById('in_'+tab_str+'_'+i).className).indexOf('currency')!=-1)
                 	document.getElementById('id_td_'+tab_str+'_'+rows+'_'+i).className="currency";
                 //End By janhavi on 11.06.2012
        	 }
          }
          if(document.getElementById('in_'+tab_str+'_'+i).value == '')
          {
        	  value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter +' ' + columnsDelimiter;
          }
          else
          {
        	  value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter +document.getElementById('in_'+tab_str+'_'+i).value + columnsDelimiter;
           }
          
          document.getElementById('in_'+tab_str+'_'+i).value="";
         
          node.appendChild(txt_node);
        }
        
        //Below for loop is for hidden columns
        for(var i=4+showcols;i<(cols +4);i++)
        {
            if(document.getElementById('in_'+tab_str+'_'+i).value == '')
            {
                value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter +' ' + columnsDelimiter;
            }
            else
            {
                value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter +document.getElementById('in_'+tab_str+'_'+i).value + columnsDelimiter;
            }
            document.getElementById('in_'+tab_str+'_'+i).value="";
            node.appendChild(txt_node);
        }
        // end for hidden cols
        txt_node.setAttribute('value',value);
        document.getElementById("counter_"+tab_str).value=rows; 
        document.getElementById("start_"+tab_str).value=start;
        calTotal(tab_str,rows,start);
       
        /**
  	   * Update Global Array by adding resp table Fields from Temp Table Array
  	   * Added By Janhavi
  	   */
        if(typeof(document.getElementById('moduleId'))!='undefined' && document.getElementById('moduleId')!=null)
		{
			if(document.getElementById('moduleId').value=='2'  && typeof(chkFieldsArr)!= 'undefined')
			{
				updateFieldArr(tab_str+'_');	
			}
		} 
        
     // Code added by Varun to call a function after adding the record in the table.
    	funcNameElement = document.getElementById(tab_str + '_afterAddFunction');
    	if(funcNameElement != null && funcNameElement.value != "")
    	{
    		var funcName = funcNameElement.value;
    		if(window[funcName])
    			window[funcName](rows);
    	}
  }

//For Delete function of addrow_VMD
function fn_ShowActDelete_VMD(tab_str,rowno,str_cols,showcols)
{
	if(document.getElementById('id_'+tab_str+'_'+rowno+'_1').name != "deleted")
	{
		/** added */
		var funcNameElement = document.getElementById(tab_str + '_beforeDeleteFunction');
		if(funcNameElement != null && funcNameElement.value != "")
		{
			var funcName = funcNameElement.value;
			if(window[funcName])
				if(window[funcName](rowno) === false)
					return;
		}
		/** end*/ 
		var message= "Are you sure to delete this Record?";
		var oldTextVal = "Delete";
		/**Added By Kandarp Start*/                
		if(document.getElementById(tab_str+'_deleteLinkName')){
			oldTextVal = document.getElementById(tab_str+'_deleteLinkName').value;
		} else {
        /*Do nothing*/
		}
		var newTextVal = "deleted";
		/**Added By Kandarp End*/
		if(tab_str=='modifyLeaveDetails')
		{
			message= "Are you sure to cancel selected Leave Request?";
			newTextVal = "cancelled";            
		}
		if(confirm(message))
		{
			mDeleteFlag = true;
			cols=parseInt(str_cols);          
			var newTextVal1 = "&nbsp;";
			var tabledef = document.getElementById('id_'+tab_str+'_'+rowno+'_1');
			var textdel = document.getElementById('id_temp_'+tab_str+'_'+rowno+'_1');
			if(tabledef.innerHTML==oldTextVal)
			{
				tabledef.innerHTML = newTextVal;
				tabledef.name="deleted";
				textdel.value="deleted";
				var tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_2'); 
				tablemod.name="&nbsp;";
				tablemod.innerHTML = newTextVal1;
				tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_3');
				tablemod.name="&nbsp;";
				tablemod.innerHTML = newTextVal1;
			}
      
			var textnodeDelete = document.getElementById('id_'+tab_str+'_'+rowno+'_1');
			textnodeDelete.removeAttribute('href');
      
			rows=document.getElementById("counter_"+tab_str).value;
			
			if (document.getElementById('selfWifeDetailsFlag') && document.getElementById('selfWifeDetailsFlag').value == 'true')
	          {
	          	calTotalForSelfAndWife(tab_str,rows,showcols);
	          }
	          else
	          {
	          	calTotal(tab_str,rows,showcols);
	          }
	           if(document.getElementById('adRwAfterDelEvt')){            
	                if(document.getElementById('adRwAfterDelEvt').value == 'adRwAfterDelEvt'){                    
	                   afterDelteDefaultCall(tab_str,rowno);                                    
	                }
	            }
	            if(document.getElementById(tab_str+"_deleted")) {
	           deletePartDtls = document.getElementById(tab_str+"_deleted").value;
	           deletePartDtls += (rowno) + "@@";
	           //alert("Deleted "+tab_str+" :: "+deletePartDtls);
	           document.getElementById(tab_str+"_deleted").value = deletePartDtls;
	           
	        }
			 /**
	         * call method after delete
	         * added by sameer
	         */
	        var afterDeleteFunction = document.getElementById(tab_str + '_afterDeleteFunction');
			  if(null!=afterDeleteFunction && null!=afterDeleteFunction.value && afterDeleteFunction.value!=''){
				  if(window[afterDeleteFunction.value])
		                if(window[afterDeleteFunction.value](rowno) == false){
		                	return;
		                }
			  }
			  
			  /**
		    	 * For removing field_id keys from Global Array for given Table and row and Reseting Temp Table Array
		    	 * Added By Janhavi
		    	 */	 
				  if(typeof(document.getElementById('moduleId'))!='undefined' && document.getElementById('moduleId')!=null)
					{
						if(document.getElementById('moduleId').value=='2')
						{	  
					    	if(typeof(chkFieldsArr)!='undefined')	  
					    	{
					    		resetChkFieldsArr(tab_str,rowno,Number(tab_str),4);   
					    		var arrObj= getCurrentArray(tab_str+'_');					  	  
						  	  	for(x in arrObj)
						  		{
						  		  	delete arrObj[x];
						  		}
					    	}
						}
					}
			
		}
        if(document.getElementById(tab_str+"_deleted")) 
        {
        	deletePartDtls = document.getElementById(tab_str+"_deleted").value;
        	deletePartDtls += (rowno) + "@@";
        	//alert("Deleted "+tab_str+" :: "+deletePartDtls);
        	document.getElementById(tab_str+"_deleted").value = deletePartDtls;
        }
	}
}

//For Modify function of addrow_VMD
function fn_ShowActModify_VMD(tab_str,show_n,str_rowno,str_cols)
{
    cols=parseInt(str_cols);
    rowno=parseInt(str_rowno);
    showcols=parseInt(show_n);
    var n=parseInt(document.getElementById('counter_'+tab_str).value);
    var modifyLinkText = "Modify";
    var_i=1;
    if(document.getElementById('id_'+tab_str+'_'+rowno+'_2').name == "Modifying")//if modify link is already clicked on the same href then return from here
    {
        return;
    }
    
    var temp_a=document.getElementById("a_"+tab_str);//getting the ahref element
    
    /**
     * call method before modify
     * added by janhavi
     */
    var beforeModifyFunction = document.getElementById(tab_str + '_beforeOnModifyFunction');
	  if(null!=beforeModifyFunction && null!=beforeModifyFunction.value && beforeModifyFunction.value!=''){
		  if(window[beforeModifyFunction.value])
                if(window[beforeModifyFunction.value](rowno) == false){
                	return;
                }
	  }    
    
    //check started for modify link clicked on other rows
    //if it's clicked then reset it
    for(i=var_i;i<=n;i++)//iterate for the no of rows in the dynamic table
    {
        var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_2');//get the modify element for the current row     
        
        if(tablemod!= null && tablemod.name=="Modifying") // if modify element is not null and it was already clicked then reset it here
        {
            tablemod.innerHTML = modifyLinkText; 
            tablemod.name = newTextVal;
            temp_a.onmouseup=str_onmouseup2;
            temp_a.onclick=str_onclick2;
            temp_a.href=str_href2;
            //reset the delete button here
            document.getElementById('id_'+tab_str+'_'+i+'_1').innerHTML = "Delete";
            //break from here as only 1 element can be in Modifying state at a time, and it's reset now.
            break;
        }
    }
    //operations started here on the clicked link's row
    var modifyingTextVal = "Modifying";
    var tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_2');     //getting the modify link 
    tablemod.name="Modifying";
    tablemod.innerHTML = modifyingTextVal; 
    //parsing the @@ separated column value string 
    var colValArray = (document.getElementById("id_"+tab_str+"_"+rowno).value).split(columnsDelimiter);
    
    //itereate for the no of elements in array - 1, as last element will be blank
    for(i=0;i<colValArray.length - 1;i++)
    {
        var propertyName = colValArray[i].split(propertyValueDelimiter)[0];
        var propertyValue = colValArray[i].split(propertyValueDelimiter)[1];
        if(propertyValue =='' && (document.getElementById('in_'+tab_str+'_'+(i+4)).type == "select-one"))
        {
                document.getElementById('in_'+tab_str+'_'+(i+4)).selectedIndex=0;
        }
        else
        {
            document.getElementById('in_'+tab_str+'_'+(i+4)).value = propertyValue; // removing the blank spaces
        }
    }
  /////CHANGED UPTO HERE
  
    if(temp_a.onmouseup!="" || temp_a.onclick!="" || temp_a.href!="")
    {
      str_onmouseup="" + temp_a.onmouseup;
      str_onclick="" + temp_a.onclick;    
      str_href="" + temp_a.href;
  
      str_onmouseup2=temp_a.onmouseup;
      str_onclick2=temp_a.onclick;    
      str_href2=temp_a.href;
      
      for(i=0;i<(str_onmouseup.length);i++)
      {
        if(str_onmouseup.charAt(i) == "{")
          break;
      }
      var temp_validationFunc=str_onmouseup.substr((i+2),(str_onmouseup.length-i));
      for(i=0;i<(temp_validationFunc.length);i++)
      {
        if(temp_validationFunc.charAt(i) == "a")
        {
          if(temp_validationFunc.charAt(i+1)=="d" && temp_validationFunc.charAt(i+2)=="d" && temp_validationFunc.charAt(i+3)=="r" && temp_validationFunc.charAt(i+4)=="o" && temp_validationFunc.charAt(i+5)=="w")
            break;
        }
      }
      if(i < 4 || i >= (temp_validationFunc.length-5))
        validationFunc="";
      else
      {
        validationFunc=temp_validationFunc.substr(0,i); 
      }
      for(j=(validationFunc.length-1);j>=0;j--)
      {
        if(j==0)
        {
          validationFunc="";
          break;
        }
        
        if(validationFunc.charAt(j)==")")
        {
          if(validationFunc.charAt(j-1)==")")
          ;
          else if(validationFunc.charAt(j-1)=="(")
            break;
        }
      }
      
      if(validationFunc=="")
      {
        for(i=0;i<(str_onclick.length);i++)
        {
            if(str_onclick.charAt(i) == "{")
            {
                break;
            }
        }
        var temp_validationFunc=str_onclick.substr((i+2),(str_onclick.length-i));
        for(i=0;i<(temp_validationFunc.length);i++)
        {
          if(temp_validationFunc.charAt(i) == "a")
          {
            if(temp_validationFunc.charAt(i+1)=="d" && temp_validationFunc.charAt(i+2)=="d" && temp_validationFunc.charAt(i+3)=="r" && temp_validationFunc.charAt(i+4)=="o" && temp_validationFunc.charAt(i+5)=="w")
              {
                    validationFunc = temp_validationFunc.substr(0, i);
                    break;
              }
          }
        }
        
      }
  
      if(validationFunc=="")
      {
        for(i=0;i<(str_href.length);i++)
        {
          if(str_href.charAt(i) == ":")
            break;
        }
        
        var temp_validationFunc=str_href.substr((i+1),(str_href.length-i));
        for(i=0;i<(temp_validationFunc.length);i++)
        {
          if(temp_validationFunc.charAt(i) == "a")
          {
            if(temp_validationFunc.charAt(i+1)=="d" && temp_validationFunc.charAt(i+2)=="d" && temp_validationFunc.charAt(i+3)=="r" && temp_validationFunc.charAt(i+4)=="o" && temp_validationFunc.charAt(i+5)=="w")
              break;
          }
        }
        
        if(i < 4 || i >= (temp_validationFunc.length-5))
          validationFunc="";
        else
        {
          validationFunc=temp_validationFunc.substr(0,i); 
        }
        
        for(j=(validationFunc.length-1);j>=0;j--)
        {
          if(j==0)
          {
            validationFunc="";
            break;
          }
          
          if(validationFunc.charAt(j)==")")
          {
            if(validationFunc.charAt(j-1)==")")
            ;
            else if(validationFunc.charAt(j-1)=="(")
              break;
          }
        }
      }
      temp_a.onmouseup="";
      temp_a.onclick="";
      temp_a.href="javascript:doNothing();";
      temp_a.innerHTML = "Modify";
    }

	if(navigator.appName == 'Microsoft Internet Explorer')
	{
	    temp_a.href="javascript:"+validationFunc+"modify_clicked_VMD('"+tab_str+"',"+str_onmouseup2+","+str_onclick2+",\""+str_href2+"\",'"+showcols+"','"+rowno+"','"+cols+"');";
	}
	else
	{
	    temp_a.href="javascript:"+validationFunc+"modify_clicked_VMD('"+tab_str+"',"+str_onmouseup2+","+str_onclick2+",\""+str_href2+"\",'"+showcols+"','"+rowno+"','"+cols+"');";
	}

    
    newTextVal = "&nbsp;";
    var tabledel = document.getElementById('id_'+tab_str+'_'+rowno+'_1'); 
    tabledel.name="&nbsp;";
    tabledel.innerHTML = newTextVal;
    
    tabledel = document.getElementById('id_'+tab_str+'_'+rowno+'_3'); 
    tabledel.name="&nbsp;";
    tabledel.innerHTML = newTextVal;
   
    if(document.getElementById(tab_str+"_modified")) {
       deletePartDtls = document.getElementById(tab_str+"_modified").value;
       deletePartDtls += (rowno) + "@@";
       //alert("Deleted "+tab_str+" :: "+deletePartDtls);
       document.getElementById(tab_str+"_modified").value = deletePartDtls;
       }
    
    /**
	   * Creating or updating modify_tableId hidden field which contain current row being modified
	   * Added By Janhavi
	   */
	if(typeof(document.getElementById('moduleId'))!='undefined' && document.getElementById('moduleId')!=null)
	{
		if(document.getElementById('moduleId').value=='2'  && typeof(chkFieldsArr)!= 'undefined')
		{
			//remove prev keys from temp array
			var arrObj= getCurrentArray(tab_str+'_');
		  	  
		  	  for(x in arrObj)
		  		{
		  		  	delete arrObj[x];
		  		}
			
			var txt_node;
			if(typeof(document.getElementById('modify_'+tab_str))=='undefined' || document.getElementById('modify_'+tab_str)==null)
			{
				txt_node = document.createElement('input');
				txt_node.setAttribute('type','hidden'); 
			    txt_node.setAttribute('name','modify_'+tab_str); 
			    txt_node.setAttribute('id','modify_'+tab_str);
			    txt_node.setAttribute('value',str_rowno);
			    document.getElementById('moduleId').parentNode.appendChild(txt_node);
			}
			else
			{	
				document.getElementById('modify_'+tab_str).value=str_rowno;
			}
		}
	}
    
}
//For Modify function of addrow_VMD
function modify_clicked_VMD(tab_str,str_onmouseup,str_onclick,str_href,show_n,str_rowno,str_cols,fn_name)
{    
  cols=parseInt(str_cols);
  rows=parseInt(str_rowno);
  showcols=parseInt(show_n);
  /*var txt_node = document.createElement('input');
   txt_node.setAttribute('type','hidden'); 
    txt_node.setAttribute('name',tab_str+'_'+rows); 
    txt_node.setAttribute('id','id_'+tab_str+'_'+rows);*/
    
  //Added by Rohan
  var funcNameElement = document.getElementById(tab_str + '_beforeModifyClickedFunction');
	if(funcNameElement != null && funcNameElement.value != "")
	{
		var funcName = funcNameElement.value;
		if(window[funcName])
			if(window[funcName](rows) === false)
				return;
	}
  
  var txt_node = document.getElementById('id_'+tab_str+'_'+rows);
  var value = '';
  for(i=4;i<(showcols + 4);i++)
  {
    if(document.getElementById('in_'+tab_str+'_'+i).type == "select-one")// For Combo Box
    {
      var comboval = document.getElementById('in_'+tab_str+'_'+i);
      if(comboval.selectedIndex!=-1)
        document.getElementById("id_td_"+tab_str+"_"+rows+"_"+i).innerHTML=comboval.options[comboval.selectedIndex].text;
    }
    else
    {
      document.getElementById("id_td_"+tab_str+"_"+rows+"_"+i).innerHTML=document.getElementById('in_'+tab_str+'_'+i).value;
    }
    
    if(document.getElementById('in_'+tab_str+'_'+i).value == '')
    {
        value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter +' ' + columnsDelimiter;
    }
    else
    {
        value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter + document.getElementById('in_'+tab_str+'_'+i).value + columnsDelimiter;
    }
   
    
    document.getElementById('in_'+tab_str+'_'+i).value="";
    document.getElementById("id_td_"+tab_str+"_"+rows+"_"+i).appendChild(txt_node);
  }
  for(i=4+showcols;i<(cols + 4);i++)
  {
    value += document.getElementById('in_'+tab_str+'_'+i).name+ propertyValueDelimiter + document.getElementById('in_'+tab_str+'_'+i).value + columnsDelimiter;
    document.getElementById('in_'+tab_str+'_'+i).value="";
    document.getElementById("id_td_"+tab_str+"_"+rows+"_"+(showcols+3-1)).appendChild(txt_node); 
  }
  
  
  txt_node.setAttribute('value',value);

  var temp_a=document.getElementById("a_"+tab_str);
  temp_a.onmouseup=str_onmouseup2;
  temp_a.onclick=str_onclick2;
  temp_a.href=str_href2;
  if(tab_str=='modifyLeaveDetails')
  {
    temp_a.innerHTML = "";
    document.getElementById("modifydetails").className="";
  }
  else
  {
    temp_a.innerHTML = "Add";
  }
  var n=parseInt(document.getElementById('counter_'+tab_str).value);
  var newTextVal = "Modify";
        /**Added By Kandarp Start*/                
        if(document.getElementById(tab_str+'_modifyLinkName')){
            newTextVal = document.getElementById(tab_str+'_modifyLinkName').value;
        } else {
            /*Do nothing*/
        }
        /**Added By Kandarp End*/  
  var_i=1;
  for(i=var_i;i<=n;i++)
	{
  var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_2');     
  if(tablemod!= null && tablemod.name=="Modifying")
    {
      tablemod.innerHTML = newTextVal;
      tablemod.name = newTextVal;
    }
	}

  newTextVal = "Delete";
  
	/**Added By Kandarp Start*/
	if(document.getElementById(tab_str+'_deleteLinkName')){
	    newTextVal = document.getElementById(tab_str+'_deleteLinkName').value;
	} else {
	    /*Do nothing*/
	}
	/**Added By Kandarp End*/  
  for(i=var_i;i<=n;i++)
  {
	  var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_1');  
	  var tablemodView = document.getElementById('id_'+tab_str+'_'+i+'_3');
	  if(tablemod!= null && tablemod.innerHTML!="deleted")
	  {
		  tablemod.innerHTML = newTextVal;
		  tablemodView.innerHTML = "View";
	  }
  }
  
  rows=document.getElementById("counter_"+tab_str).value;

  
  if(fn_name!=undefined)
  {
    if(fn_name == 'fn_for_disabling')
        fn_for_disabling(tab_str);
  }    	
  
    if(document.getElementById('onModify')){
        if(document.getElementById('onModify').value == 'createIpm'){
            clickModify(tab_str);
        }
    }
    
    calTotal(tab_str,rows,cols);
	 
 /**
   * For updating field_id keys in Global Array for given Table and row
   * Added By Janhavi
   */
  if(typeof(document.getElementById('moduleId'))!='undefined' && document.getElementById('moduleId')!=null)
	{
		if(document.getElementById('moduleId').value=='2'  && typeof(chkFieldsArr)!= 'undefined')
		{
			updateFieldArr(tab_str+'_');
		}
	}
  /**
     * call method after modify clicked
     * added by Anuparna
     */
    var afterModifyClicked = document.getElementById(tab_str + '_afterModify_clicked');
	  if(null!=afterModifyClicked && null!=afterModifyClicked.value && afterModifyClicked.value!=''){
		  if(window[afterModifyClicked.value])
		  {
                if(window[afterModifyClicked.value]() == false){
                	alert("Error occured after modify");
                	return;
                }
		  }
	  }
}
// For View function of addrow_VMD
//For Return Ashok
function fn_ShowActView_VMD(tab_str,show_n,str_rowno,str_cols,flg)
{
	cols=parseInt(str_cols);
	rowno=parseInt(str_rowno);
	showcols=parseInt(show_n);
	var flag=false;
	var n=parseInt(document.getElementById('counter_'+tab_str).value);
	document.getElementById(tab_str+'_view').style.display = "none";
	var newTextVal = "View";
	var_i=1;
 
	for(i=var_i;i<=n;i++)
	{
		if(document.getElementById('id_'+tab_str+'_'+i+'_3'))
		{
			if(document.getElementById('id_'+tab_str+'_'+i+'_3').innerHTML=="viewing" || document.getElementById('id_'+tab_str+'_'+i+'_2').innerHTML=="Modifying")
			{
				flag=true;
			}
		}
	}
	if(document.getElementById('id_'+tab_str+'_'+rowno+'_3').innerHTML!="viewing" && !flag)
	{
		var temp_a=document.getElementById("a_"+tab_str);
		for(i=var_i;i<=n;i++)
        {
			if(document.getElementById('id_'+tab_str+'_'+i+'_3'))
			{
				var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_3');     
				if(tablemod!= null && tablemod.name=="viewing")
				{
					tablemod.innerHTML = newTextVal; 
					tablemod.name = newTextVal;
					temp_a.onmouseup=str_onmouseup2;
					temp_a.onclick=str_onclick2;
					temp_a.href=str_href2;
				}
			}
        }
		var tablemod = document.getElementById('id_'+tab_str+'_'+rowno+'_3');     
		tablemod.name="Viewing";
		tablemod.innerHTML = newTextVal;
		
		var colValArray = (document.getElementById("id_"+tab_str+"_"+rowno).value).split(columnsDelimiter);
      
		//itereate for the no of elements in array - 1, as last element will be blank
		for(i=0;i<colValArray.length - 1;i++)
		{
			var propertyName = colValArray[i].split(propertyValueDelimiter)[0];
			var propertyValue = colValArray[i].split(propertyValueDelimiter)[1];
			if(propertyValue =='' && (document.getElementById('in_'+tab_str+'_'+(i+4)).type == "select-one"))
			{
				document.getElementById('in_'+tab_str+'_'+(i+4)).selectedIndex=0;
			}
			else
			{
				document.getElementById('in_'+tab_str+'_'+(i+4)).value = propertyValue; // removing the blank spaces
			}
		}
      
      	//my change
        for(i=4;i<(cols + 4);i++)
      	{
      		document.getElementById('in_'+tab_str+'_'+i).disabled = true;
      	}
        cols=parseInt(str_cols);
        var newTextVal = "viewing";
        var newTextVal1 = "";
        var tabledef = document.getElementById('id_'+tab_str+'_'+str_rowno+'_3');
        
        if(tabledef.innerHTML=='View')
        {
        	tabledef.innerHTML = newTextVal;
            tabledef.name="viewing";
            //textdel.value="viewing";
            
            var tablemod = document.getElementById('id_'+tab_str+'_'+str_rowno+'_1'); 
            tablemod.name="";
            tablemod.innerHTML = newTextVal1; 
            
            var tablemod1 = document.getElementById('id_'+tab_str+'_'+str_rowno+'_2');     
            tablemod1.name="";
            tablemod1.innerHTML = newTextVal1; 
        }
    }
    else
    {
     alert("Please Clear/modify exsisting data");
    }
}
//Funcition for Clear Table
function clear_table_VMD(tab_str,str_cols)
{
	if(confirm("Are you sure to Clear the Details ?"))
	{
		cols=parseInt(str_cols);
		for(i=4;i<(cols+4);i++)
		{
			document.getElementById('in_'+tab_str+'_'+i).value="";			
		}
		
		var td_AddBtn = document.getElementById(tab_str+'_view');
		if(td_AddBtn)
		{
			td_AddBtn.style.display = "block";
			var temp_a=document.getElementById("a_"+tab_str);
			/* Changed by sameer : starts */
			if(str_href2 != "")
			{
				temp_a.href=str_href2;
			}
			if(str_onmouseup2 != "")
			{
				temp_a.onmouseup=str_onmouseup2;
			}
			if(str_onclick2 != "")
			{
				temp_a.onclick=str_onclick2;
			}
			/* Changed by sameer : ends */
			temp_a.innerHTML = "Add";
		}
		for(i=4;i<(cols + 4);i++)
			document.getElementById('in_'+tab_str+'_'+i).disabled = false;
		
		var n=parseInt(document.getElementById('counter_'+tab_str).value);
		var_i=1;
		var newTextVal = "Delete";
		var newTextVal2 = "View";
		var newTextVal3 = "Modify";
		for(i=var_i;i<=n;i++)
		{
			if(document.getElementById('id_'+tab_str+'_'+i+'_2'))
			{
				var tablemod = document.getElementById('id_'+tab_str+'_'+i+'_1'); 
				var tablemod1 = document.getElementById('id_'+tab_str+'_'+i+'_3');
				var tablemod2= document.getElementById('id_'+tab_str+'_'+i+'_2');
				if(tablemod!= null && tablemod.name!="deleted")
				{
					tablemod.innerHTML = newTextVal; 
					tablemod.name = newTextVal;
					tablemod1.innerHTML = newTextVal2;
					tablemod1.name = newTextVal2;
					tablemod2.innerHTML = newTextVal3;
					tablemod2.name = newTextVal3;
				}
			}
		}
	
		 /**
		   * For Clear Temp Array while Clear Clicked for Table and row specified
		   * Added By Janhavi 
		   */
		  if(typeof(document.getElementById('moduleId'))!='undefined' && document.getElementById('moduleId')!=null)
			{
				if(document.getElementById('moduleId').value=='2')
				{
					  if(typeof(chkFieldsArr)!='undefined')
						{
						  var arrObj= getCurrentArray(tab_str+'_');
						  
						  for(x in arrObj)
							{
							  	delete arrObj[x];
							}
						}
				}
			}
		
	}
}

/**
 * This method is used to check whether any table of the form is in modifying state.
 * This method has parameter of 2-D array having table name and id of all tables.
 * @param tabArr
 * @returns {Boolean}
 */
function checkModifyingData(tabArr){
	var sectionName='';
	for(var m=0;m<tabArr.length;m++){
		var tab = tabArr[m];
		var tab_id = tab[0];
		var srcTable = document.getElementById(tab_id);
		for (var r = 1; r < srcTable.rows.length; r++){
			if(null!=document.getElementById('id_'+tab_id+'_'+r+'_2') && document.getElementById('id_'+tab_id+'_'+r+'_2').name=='Modifying')
			{
		        if(sectionName==''){
		        	sectionName=tab[1];
			    }else{
			    	sectionName=sectionName+'@@'+tab[1];    
				}
			}
		}	
	}
	if(sectionName!=''){
		var msgArr = sectionName.split('@@');
		var msg = '';
		for(var n=0;n<msgArr.length;n++){
			if(msg==''){
				msg=(n+1)+'.The '+msgArr[n]+' section is having a row in modifying state.';
			}else{
				msg=msg+'\n'+(n+1)+'.The '+msgArr[n]+' section is having a row in modifying state.';
			}
		}
		alert(msg);
		return false;
	}
	return true;
}

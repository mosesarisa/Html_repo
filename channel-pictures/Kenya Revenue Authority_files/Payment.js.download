
function convertToKenyanShillingFormatVal(valStr,decAlertFlag){
	if(valStr != "" && valStr != 0 && valStr != "NaN" && typeof(valStr) != "undefined"){
		var val = '' + valStr;
		val = removeCommaFrmInput(val);
		if(val == ""){
			return false;
		}
		var sign = "";
		if(val.charAt(0) == '-'){
			val = val.substring(1);
			if(!(val.length > 0)){
				val = "0";
			}
			sign = "-";
		}
		var decimalFlag;
		if(val.indexOf(".") != -1){
			decimalFlag = true;
			val = val.substring(0,val.indexOf("."));
		}
		while(val.charAt(0) == "0" && val != "0"){
			val = val.substring(1,val.length);
		}

		var str = "0123456789";
		for(j = 0; j < val.length; j++){
			if(str.indexOf(val.charAt(j)) == -1){
				val = "";
				alert("Please enter numeric data in this field");
				decimalFlag = false;
				return 0;
			}
		}
		if(typeof(decAlertFlag) == "undefined"){
			decAlertFlag = true;

		}
		if(decimalFlag && decAlertFlag){
			alert("Decimal Part is not allowed.");
		}
		var valGr8 = false;
		if(val.length > 20){
			valGr8 = true;
			val = val.substring(0,20);
		}

		var result = "";
		if(val.length > 3){
			val = parseInt(val);
			var i = 1;
			while(val != 0){
				var temp = ""+(val%1000);
				while(temp.length < 3)
				{
					temp = "0"+temp;
				}
				result = "," + temp + result;
				val = parseInt(val/1000);
			}
		}
		else{
			val = parseInt(val);
			result = ""+val;
		}
		if(result.charAt(0) == ","){
			result = result.substring(1);
		}

		while(result.charAt(0) == "0" && result != "0"){
			result = result.substring(1,result.length);
		}
		if(result == ""){
			result = "0";
		}
		val = sign + result ;
		if(valGr8){
			alert("Amount cannot be greater than 20 digits");
			valGr8 = false;
		}
		return val;
	}
	else{
		return 0;
	}
}
//convertToKenyanShillingFormatValWithDecimal
function convertToKenyanShillingFormatValWithDecimal(valStr,decAlertFlag)
{
	if(valStr != "" && /*valStr != 0 &&*/ valStr != "NaN" && typeof(valStr) != "undefined")
	{
		var val = '' + valStr;
		var decimalPart = "";
		var decCnt=0;

		val = removeCommaFrmInput(val);

		if(val == "")
		{
			return false;
		}
		var sign = "";
		if(val.charAt(0) == '-')
		{
			val = val.substring(1);
			if(!(val.length > 0))
			{
				val = "0";
			}
			sign = "-";
		}

		var decimalFlag;
		if (val.split(".").length>2) {
			alert("Invalid number entered with more than one decimal part.");
			return 0;
		}
		if(val.indexOf(".") != -1)
		{
			decimalFlag = true;
			decimalPart = val.substring(val.indexOf("."));
			val = val.substring(0,val.indexOf("."));
			if (val == ""){
				val="0";
			}
		}

		while(val.charAt(0) == "0" && val != "0")
		{
			val = val.substring(1,val.length);
		}




		var str = "0123456789";

		for(j = 0; j < val.length; j++)
		{
			if(str.indexOf(val.charAt(j)) == -1)
			{
				val = "";
				alert("Please enter numeric data in this field");
				decimalFlag = false;
				return false;
			}
		}
		for(j = 1; j < decimalPart.length; j++)
		{
			if(str.indexOf(decimalPart.charAt(j)) == -1)
			{
				alert("Please enter numeric data in this field");
				return false;
			}
		}   

		var valGr8 = false;
		if(val.length > 20)
		{
			valGr8 = true;
			val = val.substring(0,20);
		}
		var deciGr8 = false;

		if(decimalPart.length > 3)
		{
			deciGr8 = true;
			decimalPart = decimalPart.substring(0,3);
		}
		// to display 00 in decimal while blank or in case of decimal only

		if(decimalPart.length==0 || decimalPart.length==1)
		{
			decimalPart=".00";
		}     
		// to display single decimal place only
		else if(decimalPart.length==2)
		{
			decimalPart+="0";        	
		}

		var result = "";
		if(val.length > 3)
		{
			val = parseInt(val);
			var i = 1;
			while(val != 0)
			{
				var temp = ""+(val%1000);
				while(temp.length < 3)
				{
					temp = "0"+temp;
				}
				result = "," + temp + result;
				val = parseInt(val/1000);
			}
		}
		else
		{
			val = parseInt(val);
			result = ""+val;
		}
		if(result.charAt(0) == ",")
		{
			result = result.substring(1);
		}

		while(result.charAt(0) == "0" && result != "0")
		{
			result = result.substring(1,result.length);
		}
		if(result == "")
		{
			result = "0";
		}
		val = sign + result  + "" + decimalPart;
		if(valGr8)
		{
			alert("The absolute part cannot be greater than 20 digits");
			valGr8 = false;
		} 
		if(deciGr8 && decAlertFlag)
		{
			alert("The decimal part cannot be greater than 2 digits");
			deciGr8 = false;
		}
		return val;
	}
	else
	{
		return 0;
	}
}


function removeCommaFrmInput(val){
	var valString = '' + val ;
	if(valString == "")
		valString = "";
	else{
		while(valString.indexOf(",") != -1)
		{
			valString = valString.replace(',','');
		}
	}
	return valString;
}


function trim(str, chars) 
{
	return ltrim(rtrim(str, chars), chars);
}
function ltrim(str, chars) 
{
	chars = chars || "\\s";
	return str.replace(new RegExp("^[" + chars + "]+", "g"), "");
}
function rtrim(str, chars) 
{
	chars = chars || "\\s";
	return str.replace(new RegExp("[" + chars + "]+$", "g"), "");
}

function goToNextPage()
{
	if(isModifyActive==true){
		alert("Please complete modify function first.");
		return false;
	}

	disableBtns();
	navigationFlag = document.getElementById('hidNavigationFlag').value;
	if(navigationFlag == "1"){
		fetchTotalLiabilityDetailsWeb();
	}
	else if(navigationFlag == "2"){
		onChangeCmbOtrPeriod();
	}
	else if (navigationFlag == "4"){
		fetchDtlsForStampDutyApprovalWeb();
	}
	else if (navigationFlag == "5"){
		fetchSplOblHdrWebByObligation("N");
	}
	else if (navigationFlag == "6"){
		fetchSplOblHdrWebByObligation("N");
	}
}

function goToFirstPage() 
{	if(isModifyActive==true){
	alert("Please complete modify function first.");
	return false;
}

	document.paymentRegForm.startIndex.value = "0";
	disableBtns();
	navigationFlag = document.getElementById('hidNavigationFlag').value;
	if(navigationFlag == "1"){
		fetchTotalLiabilityDetailsWeb();
	}
	else if(navigationFlag == "2"){
		onChangeCmbOtrPeriod();
	}
	else if (navigationFlag == "4"){
		fetchDtlsForStampDutyApprovalWeb();
	}
	else if (navigationFlag == "5"){
		fetchSplOblHdrWebByObligation("N");
	}
	else if (navigationFlag == "6"){
		fetchSplOblHdrWebByObligation("N");
	}
}

function goToPreviousPage() 
{	if(isModifyActive==true){
	alert("Please complete modify function first.");
	return false;
}

	disableBtns();
	document.paymentRegForm.startIndex.value = document.paymentRegForm.oldStartIndex.value-6;
	navigationFlag = document.getElementById('hidNavigationFlag').value;
	if(navigationFlag == "1"){
		fetchTotalLiabilityDetailsWeb();
	}
	else if(navigationFlag == "2"){
		onChangeCmbOtrPeriod();
	}
	else if (navigationFlag == "4"){
		fetchDtlsForStampDutyApprovalWeb();
	}
	else if (navigationFlag == "5"){
		fetchSplOblHdrWebByObligation("N");
	}
	else if (navigationFlag == "6"){
		fetchSplOblHdrWebByObligation("N");
	}
}

function goToLastPage() 
{	if(isModifyActive==true){
	alert("Please complete modify function first.");
	return false;
}

	document.paymentRegForm.startIndex.value = document.paymentRegForm.lastStartIndex.value;
	disableBtns();
	navigationFlag = document.getElementById('hidNavigationFlag').value;
	if(navigationFlag == "1"){
		fetchTotalLiabilityDetailsWeb();
	}
	else if(navigationFlag == "2"){
		onChangeCmbOtrPeriod();
	}
	else if (navigationFlag == "4"){
		fetchDtlsForStampDutyApprovalWeb();
	}
	else if (navigationFlag == "5"){
		fetchSplOblHdrWebByObligation("N");
	}
	else if (navigationFlag == "6"){
		fetchSplOblHdrWebByObligation("N");
	}

}

function go2PageNo(id,txtId){
	if(isModifyActive==true){
		alert("Please complete modify function first.");
		return false;
	}

	if (document.getElementById(txtId).value == "" || document.getElementById(txtId).value == "0" || Number(document.getElementById(txtId).value) > Number(document.getElementById("totalPagesId").value)){
		alert("Please enter a value between 1 and "+document.getElementById("totalPagesId").value);
		document.getElementById(txtId).value = document.getElementById("pageNo").value;
		return false;
	}
	if (document.getElementById(txtId).value == document.getElementById("pageNo").value) {
		alert("You are currently viewing page "+ document.getElementById("pageNo").value + " only.");
		return false;
	}
	if (document.getElementById(txtId).value <= 0) {
		alert("Please enter valid page numbers");
		return false;
	}
	if(document.getElementById('pageNo').value==document.getElementById('totalPagesId').value){
		var temp1 = Number(document.getElementById(txtId).value) - 1;
		var temp2 = Number(5);
		var pageStartIndex = Number(temp2 * temp1);
		document.paymentRegForm.startIndex.value = pageStartIndex;
	}
	else{
		var temp1 = Number(document.getElementById(txtId).value) - 1;
		var temp2 = document.paymentRegForm.recordsPerPage.value;
		var pageStartIndex = Number(temp2 * temp1);
		document.paymentRegForm.startIndex.value = pageStartIndex;
	}
	disableBtns();
	navigationFlag = document.getElementById('hidNavigationFlag').value;
	if(navigationFlag == "1"){
		fetchTotalLiabilityDetailsWeb();
	}
	else if(navigationFlag == "2"){
		onChangeCmbOtrPeriod();
	}
	else if (navigationFlag == "4"){
		fetchDtlsForStampDutyApprovalWeb();
	}
	else if (navigationFlag == "5"){
		fetchSplOblHdrWebByObligation("N");
	}
	else if (navigationFlag == "6"){
		fetchSplOblHdrWebByObligation("N");
	}
}
function disableBtns() {
	/*if(navigationFlag == "1"){
		document.getElementById("goBtn").disabled = "true";
	}
	else if(navigationFlag == "2"){
		document.getElementById("go2PageSplHdr").disabled = "true";
	}
	else if (navigationFlag == "4"){
		document.getElementById("go2PageStampDuty").disabled = "true";
	}
	else if (navigationFlag == "5"){
		document.getElementById("goBtnSplHdr").disabled = "true";
	}
	else if (navigationFlag == "6"){
		document.getElementById("goBtnTaxSpl").disabled = "true";
	}*/
}
function validatePaginationLast(){
	if(document.getElementById('pageNo').value==document.getElementById('totalPagesId').value){
		document.getElementById('nextLink').style.display = 'none';
		document.getElementById('lastLink').style.display = 'none';

		document.getElementById('nextLinkTd').style.display = 'none';
		document.getElementById('lastLinkTd').style.display = 'none';
	}
	else{
		document.getElementById('nextLink').style.display = '';
		document.getElementById('lastLink').style.display = '';
		document.getElementById('nextLinkTd').style.display = '';
		document.getElementById('lastLinkTd').style.display = '';
	}
}
function validatePaginationFirst()
{
	if(document.getElementById('pageNo').value=="1"){
		document.getElementById('firstLink').style.display = 'none';
		document.getElementById('previousLink').style.display = 'none';
		document.getElementById('firstLinkTd').style.display = 'none';
		document.getElementById('previousLinkTd').style.display = 'none';
	}
	else{
		document.getElementById('firstLink').style.display = 'block';
		document.getElementById('previousLink').style.display = 'block';
		document.getElementById('firstLinkTd').style.display = '';
		document.getElementById('previousLinkTd').style.display = '';
	}
}




function beforeDeleteIntotaxObligationTable(){
	//alert("called beforeDeleteIntotaxObligationTable");
}



function beforeModifyClickedIntotaxObligationTable(){
	//alert("called beforeModifyClickedIntotaxObligationTable");
}

function afterModifyIntotaxObligationTable(){
	//alert("called afterModifyIntotaxObligationTable");
}

function validateDeleteRowIntotaxObligationTable(){
	//alert("called validateDeleteRowIntotaxObligationTable");
}

function validateModifyRowIntoTaxObligationTable(){


	//alert("called validateModifyRowIntoTaxObligationTable");
}

function onlyAlphaNumeric(control){               

	var iChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890. ";
	var value="";
	var valid=true;
	for (var i=0; i<control.value.length;i++) {              
		if (iChars.indexOf(control.value.charAt(i))!=-1) {
			value=value+control.value.charAt(i);
		}               
		else{                 
			valid=false;
		}
	}                   
	if(!valid){              
		control.value="";
		control.focus();
		return false;
	}
	return true;              
}
function onlyInvoiceNo(control)
{
	var iChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890 /-:";
	var value="";
	var valid=true;
	for (var i=0; i<control.value.length;i++) {              
		if (iChars.indexOf(control.value.charAt(i))!=-1) {
			value=value+control.value.charAt(i);
		}               
		else{                 
			valid=false;
		}
	}                   
	if(!valid){              
		control.value="";
		control.focus();
		return false;
	}
	return true;           
}
function onlyAlpha(control){
	var iChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.";
	var value="";
	var valid=true;

	for (var i=0; i<control.value.length;i++) 
	{              
		if (iChars.indexOf(control.value.charAt(i))!=-1) 
		{
			value=value+control.value.charAt(i);
		}               
		else
		{                 
			valid=false;
		}
	}                   
	if(!valid)
	{              
		control.value="";
		control.focus();
		return false;
	}
	return true;              
}
function onlyNumeric(control){               
	var iChars = "1234567890.";
	var value="";
	var valid=true;
	for (var i=0; i<control.value.length;i++) {              
		if (iChars.indexOf(control.value.charAt(i))!=-1){
			value=value+control.value.charAt(i);
		}               
		else{                 
			valid=false;
		}
	}                   
	if(!valid){              
		control.value="0";
		control.focus();
		return false;
	}
	return true;              
}

function checkForCurrancy(id)
{

	totalAmountPaid(id);
	document.getElementById('txtTotalAmountPaidOTR').value= document.getElementById(id).value;
}

function validateNumber(value){
	var str = "0123456789";
	for(var j = 0; j < value.length; j++){
		if(str.indexOf(value.charAt(j)) == -1){
			return false;
		}
	}
	return true;
}


/*function isTodayOrPastDate(from) {
	if (from.value != '') {
		var curdate = new Date();
		var curmonth = parseInt(curdate.getMonth() + 1);
		var curyear = parseInt(curdate.getFullYear());
		var curday = parseInt(curdate.getDate());
		var todayDate = curday + "/" + curmonth + "/" + curyear;

		//if (chkdate(from) == false) {                   reason to keep commented code: if both date fields are permitted to be user entered then this validation is required.
		//alert("Please fill in dd/mm/yyyy format"); 
		//from.value = "";
		//from.focus();
		//return false;
		//} 
		//else 
		//{
		if (isEqual(todayDate, from.value)) {
			return true;
		}
		if (!fnCompareDates(from.value, todayDate)) {
			alert("Entered date should be a today's date or past date.");
			from.value = "";
			from.focus();
			return false;
		} 
		else{
			return true;
		}
		//}
	}
}*/

/*function isEqual(first,second)
{	
	var val1;
	var val2;
	var k = first.indexOf("/");
	var t = first.indexOf("/",3);     
	val1 = first.substr(k+1,t-k-1) +"/"+first.substr(0,k)+"/"+first.substr(t+1,first.length);
	k = second.indexOf("/");
	t = second.indexOf("/",3);
	val2 = second.substr(k+1,t-k-1) +"/"+second.substr(0,k)+"/"+second.substr(t+1,second.length);
	if (Date.parse(val1) != Date.parse(val2)){ 
		return false; 
	}
	else{ 
		return true;           
	}
}*/


function addConfirm(id)
{
	var x;
	if(document.getElementById(id).innerHTML=="Modify")
	{
		x = confirm ("Do you want to modify details?");
	}
	else
	{
		x = confirm ("Do you want to add details?");
	}
	if(x)
	{
		return true;
	}
	else
	{
		/*if(document.getElementById(id).innerHTML=="Modify"){
			document.getElementById(id).href="#addTable";
		}*/
		return false;
	}	
}
function saveConfirm()
{

	var x = confirm ("Do you want to submit details?");

	if(x)
	{
		return true;
	}
	else
	{
		return false;
	}

}
function totalAmountPaid(id)
{	
	var amtPaid = removeCommaFrmInput(document.getElementById(id).value);
	document.getElementById(id).value = convertToKenyanShillingFormatVal(amtPaid,true);

	if(document.getElementById('cmbTaxHead').value ==  AGENCY_NOTICE || document.getElementById('cmbTaxHead').value ==  AUCTION_NOTICE){
		validateAmountForAgencyAndAuction(amtPaid);
		return true;
	}
	if(document.getElementById('cmbTaxHead').value ==  AGENCY_REVENUE && document.getElementById('cmbTaxSubHead').value ==  stampDutyObligationId){
		var result=convertToKenyanShillingFormatVal(amtPaid,true);
		document.getElementById(id).value = result;
		document.getElementById('txtTotalAmountPayableOTR').value = result;
		return true;
	}else{
		var result=convertToKenyanShillingFormatVal(amtPaid,true);
		document.getElementById(id).value = result;
		return true;
	}

}

function validateAmountForAgencyAndAuction(amtPaid){
	if(document.getElementById('hidAmtForAgencyAndAuction').value != null 
			&& removeCommaFrmInput(document.getElementById('hidAmtForAgencyAndAuction').value) >0 ){

		if(amtPaid != null && amtPaid != "" && amtPaid > 0 && parseFloat(amtPaid) > parseFloat(document.getElementById('hidAmtForAgencyAndAuction').value)){

			alert("You can not enter Total Amount to be Paid greater than Notice Amount : "+ convertToKenyanShillingFormatVal(document.getElementById('hidAmtForAgencyAndAuction').value, true));

			document.getElementById('txtTotalAmountPaidOblig').value = convertToKenyanShillingFormatVal(document.getElementById('hidAmtForAgencyAndAuction').value, true);

			return true;

		} else {

			var result=convertToKenyanShillingFormatVal(amtPaid,true);
			document.getElementById('txtTotalAmountPaidOblig').value = result;
		}

	} 
}

function  clearFormWithoutWarning(){
	//var isAgentThroughReg = document.getElementById("hidIsAgentThroughReg").value;
	//if(isAgentThroughReg == "yes")
	{
		document.getElementById('txtPin').value = "";
		document.getElementById('txtFirstName').value = "";
		document.getElementById('taxPayerFullAddr').value = "";
		document.getElementById('email').value = "";
		document.getElementById('email').readOnly=false;
		document.getElementById('email').className='form101_textfcurr  form101_textfcurr_width';
		if(document.getElementById('isWithoutLogin').value=="Y" ||document.getElementById('isWithoutLogin').value=="y")
		{
			if(document.getElementById('cmbPaymentType').value==agencyValue)
			{
				document.getElementById('txtFirstName').readOnly=false;	
				document.getElementById('taxPayerFullAddr').readOnly=false;	
				document.getElementById('taxPayerFullAddr').className='form101_textfcurr form101_textfcurr_width ';
				document.getElementById('txtFirstName').className='form101_textfcurr form101_textfcurr_width ';
				hidShowTextAreaCounter('taxPayerFullAddrDiv',1);
			}
			else
			{
				document.getElementById('txtFirstName').readOnly=true;	
				document.getElementById('taxPayerFullAddr').readOnly=true;	
				document.getElementById('taxPayerFullAddr').className='readonlyInput form101_textfcurr_width ';
				document.getElementById('txtFirstName').className='readonlyInput form101_textfcurr_width ';
				hidShowTextAreaCounter('taxPayerFullAddrDiv',0);
			}
			document.getElementById('cmbPaymentType').disabled=false;
		}
		else
		{
			document.getElementById('cmbPaymentType').disabled=true;
		}
	}
}

function setTodayDateInFromAndToDate(){
	var curdate = new Date();
	var curmonth = parseInt(curdate.getMonth() + 1);
	var curyear = parseInt(curdate.getFullYear());
	var curday = parseInt(curdate.getDate());
	var todayDate = curday + "/" + curmonth + "/" + curyear;

	document.getElementById('hidObligationFromDate').value = todayDate;
	document.getElementById('hidObligationToDate').value = todayDate;

}

function convertPINtoUpperCase(obj){
	obj.value = obj.value.toUpperCase();
	return true;

}

function validateForFutureDate(fromToObj){

	if(isTodayOrPastDate(fromToObj)){
		return true;
	} 
	else{
		return false;
	}
}

function isTodayOrPastDate(from) {
	if (from.value != '' ||from.value != " ") {

		var todayDate = document.getElementById("serverDate").value;

		if (isEqual(todayDate, from.value)) {
			return true;
		}

		if (!fnCompareDates(from.value, todayDate)) {
			alert("Entered date should be a today's date or past date.");
			from.value = "";
			from.focus();
			return false;
		} 
		else{
			return true;
		}
	}
	else{
		var elemntName =  from.name;
		alert("Please enter proper"+elemntName);
	}
}

/*function isTodayOrPastDate(from) {
	if (from.value != '' ||from.value != " ") {
		var curdate = new Date();
		var curmonth = parseInt(curdate.getMonth() + 1);
		var curyear = parseInt(curdate.getFullYear());
		var curday = parseInt(curdate.getDate());
		var todayDate = curday + "/" + curmonth + "/" + curyear;
		//if (chkdate(from) == false) {                   reason to keep commented code: if both date fields are permitted to be user entered then this validation is required.
		//alert("Please fill in dd/mm/yyyy format"); 
		//from.value = "";
		//from.focus();
		//return false;
		//} 
		//else 
		//{
		if (isEqual(todayDate, from.value)) {
			return true;
		}

		if (!fnCompareDates(from.value, todayDate)) {
			alert("Entered date should be a today's date or past date.");
			from.value = "";
			from.focus();
			return false;
		} 
		else{
			return true;
		}
		//}
	}
	else{
		var elemntName =  from.name;
		alert("Please enter proper"+elemntName);
	}
}*/

function isEqual(first,second)
{	
	var val1;
	var val2;
	var k = first.indexOf("/");
	var t = first.indexOf("/",3);     
	val1 = first.substr(k+1,t-k-1) +"/"+first.substr(0,k)+"/"+first.substr(t+1,first.length);
	k = second.indexOf("/");
	t = second.indexOf("/",3);
	val2 = second.substr(k+1,t-k-1) +"/"+second.substr(0,k)+"/"+second.substr(t+1,second.length);
	if (Date.parse(val1) != Date.parse(val2)){ 
		return false; 
	}
	else{ 
		return true;           
	}
}



function clear_table_data(tab_str)
{
	for(var i=document.getElementById(tab_str).rows.length; i > 1;i--)
	{
		document.getElementById(tab_str).deleteRow(i-1);
	}
}

function clear_Page_data(tab_str,str_cols)
{
	cols=parseInt(str_cols);
	for(var i=3;i<(cols+3);i++)
	{
		document.getElementById('in_'+tab_str+'_'+i).value="";		
	}
}

//Added by Rohan for captcha
function validateCaptchaForPayment(captchaTxtid,captchaImgid)
{
	//if(document.getElementById('isWithoutLogin') && document.getElementById('isWithoutLogin').value=='Y')
	if(isWithoutLogin == "Y" || isWithoutLogin == "y")
	{
		//var captchaValue = captchaTxtid.value;
		var captchaValue = document.getElementById(captchaTxtid).value;
		var captchaFlag = false;

		if(captchaValue != null && captchaValue=="")
		{
			alert('Please enter answer of the arithmetic operation.');
			return false;
		}
		else
		{
			ValidateCaptchaForPayment.validateCaptchaForPayment(captchaValue,{async:false,callback:function(data){ 
				if(null!=data && data)
				{
					captchaFlag = true;
				}
				else
				{
					captchaFlag = false;
				}
			}}
			);

			if(!captchaFlag)
			{
				alert("You did not enter the correct value for the Arithmetical Question field. Please read the expression and enter the correct answer.");
				document.getElementById(captchaTxtid).value='';	
				ajaxCaptchaLoad(captchaImgid);
				return false;
			}
			else
			{
				return true;
			}
		}
	}
}


/*
function ajaxCaptchaLoad(){

	var xmlHttpReq = false;
	var self = this;
	var strURL = "GenerateCaptchaServlet.do";
	//ajax_initialise();
	self.xmlHttpReq=ajaxObjRequest(); // used to get xmlHttp request object from ajaxSetup.js
	if(self.xmlHttpReq==null)
	{
		alert('Your Browse does not support Ajax \n Please check Your Browser settings');
		return false;
	} 
	self.xmlHttpReq.open('POST', strURL, true);
	self.xmlHttpReq.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
	//In Case of get use [self.xmlHttpReq.setRequestHeader('If-Modified-Since', 'Sat, 1 Jan 2000 00:00:00 GMT')] this code in java script 

	self.xmlHttpReq.onreadystatechange = function() 
	{
		if(self.xmlHttpReq.readyState == 4)
		{
			var responseTxt = self.xmlHttpReq.responseText;
			if ( responseTxt == "Error" )
			{
				alert("There was an error processing your request. Please try again later.");
				document.getElementById("cmdSaveOblig").disabled = true;
				return
			}
			else
			{
				var captchaarr = responseTxt.split("$");
				var first = captchaarr[0];
				var opr = captchaarr[1];
				var second = captchaarr[2];
				document.getElementById("captcha_img").innerHTML='';
				document.getElementById("captcha_img").innerHTML = "<h3 class=\"captcha\">" + first + '  ' + opr  + '  ' + second + '   ' + '? ' + "</h3>" ;
			}		
		}
	};
	self.xmlHttpReq.send("&sourcePage=LOGIN");



}*/

function validPIN(form)
{
	var pinTyp='';
	var pin = form.value;

	if ( pin == null || pin== '')
	{
		return false;
	}
	if(securityCheck(form.id))
	{ 
		if(pin.length == 11)
		{
			if(!((pin.substring(0,1).toString() == "A") || (pin.substring(0,1).toString() == "P")))
			{	
				alert("Please enter valid PIN.");
				form.value = "";
				return false;
			}

			if(isNaN(pin.substring(1,10).toString()))
			{	

				alert("Please enter valid "+pinTyp+" PIN.");
				form.value = "";
				return false;
			}
			var charCode = pin.substring(10).toString();
			var check="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
			flag=0;
			for(var i=0;i<check.length;i++){
				if(charCode == check.charAt(i)){	
					flag=1;
				}
			}
			if(flag==0){
				alert("Please enter valid "+pinTyp+" PIN.");
				form.value = "";
				return false;
			}
			else
				flag=0;
		}else if(pin.length == 15){
			return true;
		}
		else
		{

			alert("Please enter valid "+pinTyp+" PIN.");
			form.value = "";
			return false;
		}

	}
	else
	{    
		alert('Malicious Code Found. Please Enter valid data.');
		form.value = "";
		return false;
	}	 

	return true;
}

function GetYearFromEffetciveYear(id)
{

	var regDate = null;
	/*65216 NITA SAT with no PAYE :: START*/
	var isPayerRegistered ='';
	var pin=trim(document.getElementById('txtPin').value,'');
	logedInPin=pin;
	if(document.getElementById('cmbTaxSubHead').value== 42){
		FetchTaxPayerDetail.fetchTaxPayerDetail(pin,logedInPin,{async:false,callback: function(data){
			isPayerRegistered = data.isPayeRegistered;
			document.getElementById("hidIsPayeRegistered").value = isPayerRegistered;
		}});	
	}
	
	
	/*65216 NITA SAT with no PAYE :: END*/
	if(document.getElementById('cmbTaxHead').value==IT  && document.getElementById('cmbTaxSubHead').value== CGT)
	{
		var obligationId=document.getElementById('cmbTaxSubHead').value;
		var taxPayerID=document.getElementById('hidTaxPayerId').value;
		GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
			if(data != 'null' &&  data != null){
				regDate=data.effectiveDate;
			}
		}});
		if("01/"== regDate.substr(3,3))
		{
			regDate=parseInt(regDate.substr(6, regDate.length),10) -1;
		}
		else{
			regDate=parseInt(regDate.substr(6, regDate.length),10);
		}
	}
	//changes done for CR Monthly Rental Income
	if(document.getElementById('cmbTaxHead').value==IT  && document.getElementById('cmbTaxSubHead').value== rentIncomeCode)
	{
		var obligationId=document.getElementById('cmbTaxSubHead').value;
		var taxPayerID=document.getElementById('hidTaxPayerId').value;
		GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
			if(data != 'null' &&  data != null){
				regDate=data.effectiveDate;
			}
		}});
		if("01/"== regDate.substr(3,3))
		{
			regDate=parseInt(regDate.substr(6, regDate.length),10) -1;
		}
		else{
			regDate=parseInt(regDate.substr(6, regDate.length),10);
		}
	}
	if(document.getElementById('cmbTaxHead').value==IT && document.getElementById('cmbTaxSubHead').value== 44)
	{
			var obligationId=document.getElementById('cmbTaxSubHead').value;
			var taxPayerID=document.getElementById('hidTaxPayerId').value;
			GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
				if(data != 'null' &&  data != null){
					regDate=data.effectiveDate;
				}
			}});
			
				regDate=parseInt(regDate.substr(6, regDate.length),10);
				
			
		}	

	if(document.getElementById('cmbTaxHead').value==IT  && document.getElementById('cmbTaxSubHead').value== CGT)
	{
		var obligationId=document.getElementById('cmbTaxSubHead').value;
		var taxPayerID=document.getElementById('hidTaxPayerId').value;
		GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
			if(data != 'null' &&  data != null){
				regDate=data.effectiveDate;
			}
		}});
	
			regDate=parseInt(regDate.substr(6, regDate.length),10);
		
	}
	//end
	//changes done for CR Amnesty
	/*if(document.getElementById('cmbTaxHead').value==IT  && document.getElementById('cmbTaxSubHead').value== amnestyCode)
	{
		var obligationId=document.getElementById('cmbTaxSubHead').value;
		var taxPayerID=document.getElementById('hidTaxPayerId').value;
		GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
			if(data != 'null' &&  data != null){
				regDate=data.effectiveDate;
			}
		}});
		if("01/"== regDate.substr(3,3))
		{
			regDate=parseInt(regDate.substr(6, regDate.length),10) -1;
		}
		else{
			regDate=parseInt(regDate.substr(6, regDate.length),10);
		}
	}*/
	//end
	else if(document.getElementById('cmbTaxHead').value==IT || document.getElementById('cmbTaxHead').value==VAT||document.getElementById('cmbTaxHead').value==EXCISE)
	{
		var obligationId=document.getElementById('cmbTaxSubHead').value;
		var taxPayerID=document.getElementById('hidTaxPayerId').value;
		//Added for fetching year in Presumptive Tax
		 if (document.getElementById('cmbTaxSubHead').value==PT)
		{
			var obligationId=document.getElementById('cmbTaxSubHead').value;
			var taxPayerID=document.getElementById('hidTaxPayerId').value;
			GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
				if(data != 'null' &&  data != null){
					effactiveDate=data.effectiveDate;
					 regDate=parseInt(effactiveDate.substr(6, effactiveDate.length),10);
				}
			}});
			}
		 if(document.getElementById('cmbTaxHead').value==IT && document.getElementById('cmbTaxSubHead').value== 44)
			{
					var obligationId=document.getElementById('cmbTaxSubHead').value;
					var taxPayerID=document.getElementById('hidTaxPayerId').value;
					GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
						if(data != 'null' &&  data != null){
							regDate=data.effectiveDate;
						}
					}});
					
						regDate=parseInt(regDate.substr(6, regDate.length),10);
						
					
				}	
		 //START:::Added for DAT 11/2023
		 if(document.getElementById('cmbTaxHead').value==IT && document.getElementById('cmbTaxSubHead').value== 45)
		 {
			 var obligationId=document.getElementById('cmbTaxSubHead').value;
			 var taxPayerID=document.getElementById('hidTaxPayerId').value;
			 GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
				 if(data != 'null' &&  data != null){
					 regDate=data.effectiveDate;
				 }
			 }});
			 
			 regDate=parseInt(regDate.substr(6, regDate.length),10);
			 
			 
		 }	
		//END:::Added for DAT 11/2023
		 
		//START:::Added for SEP #81171
		 if(document.getElementById('cmbTaxHead').value==IT && document.getElementById('cmbTaxSubHead').value== 47)
		 {
			 var obligationId=document.getElementById('cmbTaxSubHead').value;
			 var taxPayerID=document.getElementById('hidTaxPayerId').value;
			 GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
				 if(data != 'null' &&  data != null){
					 regDate=data.effectiveDate;
				 }
			 }});
			 
			 regDate=parseInt(regDate.substr(6, regDate.length),10);
			 
			 
		 }	
		//START:::Added for SEP #81171

		else if(document.getElementById('isMigrated').value=='Y')
		{
			GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
				if(data != 'null' &&  data != null){
					regDate=data.effectiveDate;
				}
			}});
			if("01/"== regDate.substr(3,3))
				{
				regDate=parseInt(regDate.substr(6, regDate.length),10) -1;
				}
			else{
			regDate=parseInt(regDate.substr(6, regDate.length),10);
			}
		}
		else
		{
			for (var key in obligMap) 
			{
				if(obligationId == key)
				{
					regDate = obligMap[key];
				}
			}
			/*if("01/"== regDate.substr(3,3))
			{
			regDate=parseInt(regDate.substr(6, regDate.length),10) -1;
			}
			else{*/
				regDate=parseInt(String(regDate).substr(6, regDate.length),10);
			/*}*/
		}
		
	}
	if(document.getElementById('cmbTaxHead').value==AGENCY_REVENUE)
	{
		var effactiveDate;
		if(document.getElementById('cmbTaxSubHead').value==NSSF){
			 effactiveDate=document.getElementById('nssfEffDate').value;
			 regDate=parseInt(effactiveDate.substr(6, effactiveDate.length),10);
			//hard code to be reomoved;
			//effactiveDate="01/01/2013";	
		}else if (document.getElementById('cmbTaxSubHead').value==GPBTobligationId)
			{
			var obligationId=document.getElementById('cmbTaxSubHead').value;
			var taxPayerID=document.getElementById('hidTaxPayerId').value;
			GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
				if(data != 'null' &&  data != null){
					effactiveDate=data.effectiveDate;
					 regDate=parseInt(effactiveDate.substr(6, effactiveDate.length),10);
				}
			}});
			}else if(document.getElementById('cmbTaxSubHead').value== housingLevy){

				var obligationId=document.getElementById('cmbTaxSubHead').value;
				var taxPayerID=document.getElementById('hidTaxPayerId').value;
				GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
					if(data != 'null' &&  data != null){
						regDate=data.effectiveDate;
					}
				}});
				
					regDate=parseInt(regDate.substr(6, regDate.length),10);
				
			}
			else if(document.getElementById('cmbTaxSubHead').value== 42)
			{

				var obligationId=document.getElementById('cmbTaxSubHead').value;
				var taxPayerID=document.getElementById('hidTaxPayerId').value;
				GetObligationRollOutDateDtls.getObligationRollOutDateDtls(obligationId,taxPayerID,{async:false,callback: function(data){
					if(data != 'null' &&  data != null){
						regDate=data.effectiveDate;
					}
				}});
				
					regDate=parseInt(regDate.substr(6, regDate.length),10);
				
			}
			//added for AWWDA :: START
			else if(document.getElementById('cmbTaxSubHead').value== 49){
				effactiveDate='01/01/2025';
				regDate=parseInt(effactiveDate.substr(6, effactiveDate.length),10);
			}
			//added for AWWDA :: END
			else{
				effactiveDate=document.getElementById('hidEffectiveDt').value;
				 regDate=parseInt(effactiveDate.substr(6, effactiveDate.length),10);
				}
		
	}
	if(document.getElementById('cmbTaxHead').value==OTHER)
	{
		var effactiveDate;
		if(document.getElementById('cmbTaxSubHead').value==NSSF){
			 effactiveDate=document.getElementById('nssfEffDate').value;
			//hard code to be reomoved;
			//effactiveDate="01/01/2015";
			 effactiveDate=obligationRollOutDate;
		}else
		{
			 effactiveDate=document.getElementById('hidEffectiveDt').value;
			 effactiveDate="01/01/2015";	
		}
		regDate=parseInt(effactiveDate.substr(6, effactiveDate.length),10);
	}
	var curdate;
	if(trim(document.getElementById('currServerDate').value)!=''){
		curdate = document.getElementById('currServerDate').value ;
	}else{
		curdate=formatDate( Date());
	}
	var curyear = parseInt(curdate.substr(6, curdate.length),10);
	var oOption=document.createElement("option");
	oOption.text="--Year--";
	oOption.value="-1";
	oOption.title="--Year--";
	document.getElementById(id).add(oOption);
	/*Added for ticket 65216 NITA arrears :: START*/
	//if(document.getElementById('cmbPaymentType').value=="SAT")
	if((document.getElementById('cmbPaymentType').value=="SAT"
		&&  document.getElementById('cmbTaxSubHead').value != 42)
			|| (isPayerRegistered == '' 
				|| isPayerRegistered == 'Y' ))
		/*Added for ticket 65216 NITA arrears :: END*/
	{
		/*#added for SEP To LImit DST ::START*/
		if(document.getElementById('cmbTaxSubHead').value==44){
			curyear="2024";
		}
		/*#added for SEP To LImit DST ::END*/
		
		for (var i=regDate; i <= curyear; i++) 
		{
			var oOption=document.createElement("option");
			optionId=i;
			optionValue=i;
			oOption.text=optionValue;
			oOption.value=optionId;
			oOption.title=optionValue;
			document.getElementById(id).add(oOption);
		}
	}
	/*else if(document.getElementById('cmbPaymentType').value=="TAP")
	{
		for (var i=curyear; i <= curyear+1; i++) 
		{
			var oOption=document.createElement("option");
			optionId=i;
			optionValue=i;
			oOption.text=optionValue;
			oOption.value=optionId;
			oOption.title=optionValue;
			document.getElementById(id).add(oOption);
		}
	}*/
	/*Added for ticket 65215 NITA arrears :: START*/
	else if(document.getElementById('cmbPaymentType').value=="NITAR")
	{
		for (var i=regDate; i <= curyear; i++) 
		{
			var oOption=document.createElement("option");
			optionId=i;
			optionValue=i;
			oOption.text=optionValue;
			oOption.value=optionId;
			oOption.title=optionValue;
			document.getElementById(id).add(oOption);
		}
	}
	else if(document.getElementById('cmbPaymentType').value=="SAT" 
		         && isPayerRegistered == "N" 
			       && document.getElementById('cmbTaxSubHead').value== 42)
	{
		var oblgEffDate = "01/05/2022";
		
		regDate =parseInt(oblgEffDate.substr(6, oblgEffDate.length),10);
		for (var i=regDate; i <= curyear; i++) 
		{
			var oOption=document.createElement("option");
			optionId=i;
			optionValue=i;
			oOption.text=optionValue;
			oOption.value=optionId;
			oOption.title=optionValue;
			document.getElementById(id).add(oOption);
		}
	}
	/*Added for ticket 65215 NITA arrears :: END*/

}
function checkWithHoldeePin(id)
{
	if(document.getElementById('hidPinNo').value==document.getElementById(id).value)
	{
		document.getElementById(id).value="";
		if(document.getElementById('cmbPaymentType').value=="SAT")
		{
			if(document.getElementById('cmbTaxSubHead').value==VisOblCode)
			{
				alert("PIN of Supplier  and Withholder PIN cannot be same.");
			}
			else
			{
				alert("Withholdee PIN and Withholder PIN cannot be same.");
			}
			return false;
		}
		else
		{
			alert("Taxpayer PIN and Agent PIN cannot be same.");
			return false;
		}
	}
	else
	{
		return true;
	}
}

function fetchTaxRateValueFromCategoryWeb(obligationId,category,status,countryCode){
	var fromDt = "";
	var toDt = ""; 
	var taxRate ="";
	if(obligationId == shippingOblCode){
		fromDt = document.getElementById('in_shippingTaxTable_6').value;
		toDt = document.getElementById('in_shippingTaxTable_6').value;
	}
	else if(obligationId == WithHoldee){
		fromDt = document.getElementById('in_withholdeeFormTable_5').value;
		toDt = document.getElementById('in_withholdeeFormTable_5').value;
	}
	else if(obligationId==GPBTobligationId){
		fromDt=status;
		toDt=countryCode;
		status="";
		countryCode="";
	}
	

	FetchTaxRateValueFromCategoryWeb.fetchTaxRateValueFromCategoryWeb(obligationId,category,fromDt,toDt,status,countryCode,{async:false,callback: function(data){
		if(data!= null && data.length!=0){
			
			if(obligationId == WithHoldee){
				for(var i=0;i<data.length;i++)
				{
					if(category!="WHT_0600" || status!="R" )
					{
						document.getElementById('in_withholdeeFormTable_8').value =  convertToKenyanShillingWithFourDigitDecimal(parseFloat(data[i].taxRateWith,10),true);
					}
					document.getElementById('isPinReq').value = data[i].isPinReq;
					document.getElementById('isWhtDtlReq').value = data[i].isWhtDtlReq;
					var pinRequr=document.getElementById('isPinReq').value;
					var whtDtlsRequr=document.getElementById('isWhtDtlReq').value; 
					if(pinRequr=='Y' || pinRequr=='y')
					{

						document.getElementById('in_withholdeeFormTable_3').readOnly=false;
						document.getElementById('in_withholdeeFormTable_12').readOnly=true;
						document.getElementById('in_withholdeeFormTable_15').readOnly=true;
						document.getElementById('in_withholdeeFormTable_4').readOnly=true;
						document.getElementById('in_withholdeeFormTable_3').className='form101_textfcurr form101_textfcurr_width';
						document.getElementById('in_withholdeeFormTable_4').className='readonlyInput form101_textfcurr_width';
						document.getElementById('in_withholdeeFormTable_12').className='readonlyInput form101_textfcurr_width';
						document.getElementById('in_withholdeeFormTable_15').className='readonlyInput form101_textfcurr_width';
					}
					if((pinRequr=='N' || pinRequr=='n') &&(whtDtlsRequr=='Y' || whtDtlsRequr=='y' ||whtDtlsRequr=='O' || whtDtlsRequr=='o'))
					{
						document.getElementById('in_withholdeeFormTable_4').readOnly=false;
						document.getElementById('in_withholdeeFormTable_12').readOnly=false;
						document.getElementById('in_withholdeeFormTable_15').readOnly=false;
						document.getElementById('in_withholdeeFormTable_3').readOnly=false;
						document.getElementById('in_withholdeeFormTable_3').className='form101_textfcurr form101_textfcurr_width';
						document.getElementById('in_withholdeeFormTable_4').className='form101_textfcurr form101_textfcurr_width';
						document.getElementById('in_withholdeeFormTable_12').className='form101_textfcurr form101_textfcurr_width';
						document.getElementById('in_withholdeeFormTable_15').className='form101_textfcurr form101_textfcurr_width';
					}
					if(whtDtlsRequr=='N' || whtDtlsRequr=='n')
					{
						document.getElementById('in_withholdeeFormTable_4').value="";
						document.getElementById('in_withholdeeFormTable_12').value="";
						document.getElementById('in_withholdeeFormTable_15').value="";
						document.getElementById('in_withholdeeFormTable_3').value="";
						document.getElementById('in_withholdeeFormTable_4').readOnly=true;
						document.getElementById('in_withholdeeFormTable_12').readOnly=true;
						document.getElementById('in_withholdeeFormTable_15').readOnly=true;
						document.getElementById('in_withholdeeFormTable_3').readOnly=true;
						document.getElementById('in_withholdeeFormTable_3').className='readonlyInput form101_textfcurr_width';
						document.getElementById('in_withholdeeFormTable_4').className='readonlyInput form101_textfcurr_width';
						document.getElementById('in_withholdeeFormTable_12').className='readonlyInput form101_textfcurr_width';
						document.getElementById('in_withholdeeFormTable_15').className='readonlyInput form101_textfcurr_width';
					}
					if(document.getElementById('in_withholdeeFormTable_8').value==0)
					{
						if(category!="WHT_0600" || status!="R" )
						{
							alert(noCmobinationForTax);
							document.getElementById('in_withholdeeFormTable_4').readOnly=true;
							document.getElementById('in_withholdeeFormTable_12').readOnly=true;
							document.getElementById('in_withholdeeFormTable_15').readOnly=true;
							document.getElementById('in_withholdeeFormTable_4').className='readonlyInput form101_textfcurr_width';
							document.getElementById('in_withholdeeFormTable_12').className='readonlyInput form101_textfcurr_width';
							document.getElementById('in_withholdeeFormTable_15').className='readonlyInput form101_textfcurr_width';
						}
					}

				}


			}
			else if(obligationId ==shippingOblCode)
			{
				for(var i=0;i<data.length;i++)
				{
					document.getElementById('in_shippingTaxTable_11').value =  convertToKenyanShillingFormatValWithDecimal(parseFloat(data[i].taxRateWith).toFixed(2),true);
				}
			} else if(obligationId==GPBTobligationId)
				{
				/*taxRate = parseFloat(data[0].taxRateWith);
				document.getElementById('gbptTaxRate').innerHTML =  taxRate;*/
				document.getElementById('gbptTaxRate').value =  convertToKenyanShillingWithFourDigitDecimal(parseFloat(data[0].taxRateWith,10),true);
				return (true);
				}
		}
		else{
			alert(noCmobinationForTax);
			document.getElementById('in_withholdeeFormTable_8').value=0;
			document.getElementById('in_shippingTaxTable_11').value=0;
			return false;
		}
	}});

}
function overDeclareUnderDeclare(underDeclare,overDeclare)
{
	if(removeCommaFrmInput(document.getElementById(underDeclare).value)>0)
	{
		document.getElementById(overDeclare).readOnly=true;
		document.getElementById(overDeclare).className='readonlyInput form101_textfcurr_width textonlyRight';
		document.getElementById(underDeclare).readOnly=false;
		document.getElementById(underDeclare).className='form101_textfcurr form101_textfcurr_width textonlyRight';
	}
	else if (removeCommaFrmInput(document.getElementById(underDeclare).value)==0 && removeCommaFrmInput(document.getElementById(overDeclare).value)==0)
	{
		document.getElementById(overDeclare).readOnly=false;
		document.getElementById(overDeclare).className='form101_textfcurr form101_textfcurr_width textonlyRight';
		document.getElementById(underDeclare).readOnly=false;
		document.getElementById(underDeclare).className='form101_textfcurr form101_textfcurr_width textonlyRight';
	}
	else if(removeCommaFrmInput(document.getElementById(overDeclare).value)>0)
	{
		document.getElementById(overDeclare).readOnly=false;
		document.getElementById(overDeclare).className='form101_textfcurr form101_textfcurr_width textonlyRight';
		document.getElementById(underDeclare).readOnly=true;
		document.getElementById(underDeclare).className='readonlyInput form101_textfcurr_width textonlyRight';
	}
}

function clearPartialTableForTax()
{
	//alert("hii");
	for(var i=1;i<5;i++)
	{
		//alert('in_TaxSplObligHdrTbl_'+i);
		if(document.getElementById('in_TaxSplObligHdrTbl_'+i)!=null){
		for(var j=document.getElementById('in_TaxSplObligHdrTbl_'+i).rows.length; j > 1;j--)
		{
			//	alert('in_TaxSplObligHdrTbl_'+i);
			document.getElementById('in_TaxSplObligHdrTbl_'+i).deleteRow(j-1);
		}
		document.getElementById('in_TaxSplObligHdrTbl_'+i).style.display='none';
		}
	}
}

//Added by Ravi Patel (537640)
function limitText(limitField, limitCount, limitNum)
{
	if (limitField.value.length > limitNum)
	{
		limitField.value = limitField.value.substring(0, limitNum);
	}
	else
	{
		limitCount.value = limitNum - limitField.value.length;
	}
}
//Ended by Ravi Patel (537640)
function goToPageValidation(id)
{
	if(!isValNumeric(id))
	{
		alert('Please enter numeric data');
		document.getElementById(id).value = document.getElementById("pageNo").value;
	}
}

function trim(str, chars) {
	return ltrim(rtrim(str, chars), chars);
}
function ltrim(str, chars) {
	chars = chars || "\\s";
	return str.replace(new RegExp("^[" + chars + "]+", "g"), "");
}
function rtrim(str, chars) {
	chars = chars || "\\s";
	return str.replace(new RegExp("[" + chars + "]+$", "g"), "");
}

function validateDateForTaxpayerRegDateObj(obj,lableName){
	var date = obj.value;
	var regDate = document.getElementById('hidEffectiveDt').value;
	if(validateDateForTaxpayerRegDateValue(date,regDate)){
		return true;
	}
	else{
		//alert(lableName+" should be after Taxpayer Registration Date");
		alert("Please select "+lableName+" after Income Tax Registration Date "+regDate );
		obj.value = "";
		obj.focus();
		return false;
	}
}

function validateDateForTaxpayerRegDateValue(date,regDate){
	regDate = regDate.substring(2);
	regDate = "01"+regDate;
	//alert("in payment.js-->validateDateForTaxpayerRegDateValue-->reg date is-->"+regDate);
	if (isEqual(date, regDate)) {
		return true;
	}
	else if (!fnCompareDates(date, regDate)){
		return true;
	} 
	else{
		return false;
	}
	return true;
}
function validateDateForobligRegDate(date,obligationId){
	var regDate = null;
	for (var key in obligMap) {
		//alert([key, obligMap[key]].join("\n\n"));
		if(obligationId == key){
			var serverDateArray = obligMap[key].split("/");
			var curdate = new Date(serverDateArray[2],serverDateArray[1]-1,serverDateArray[0]);
			curdate.setMonth(curdate.getMonth() - 1);
			var dd = curdate.getDate();
			if (dd<10) dd= '0'+dd;
			var mm = curdate.getMonth() + 1; // now moths are 1-12
			if (mm<10) mm= '0'+mm;
			regDate=dd+"/"+mm+"/"+curdate.getFullYear();
		}
	}
	if(validateDateForTaxpayerRegDateValue(date,regDate)){
		return true;
	}
	else{
		return false;
	}
}
function hidShowTextAreaCounter(id,no)
{
	if(no==0)
	{
		document.getElementById(id).style.display='none';
	}
	else if(no==1)
	{
		document.getElementById(id).style.display='';
	}
}
function dateChange(obj,lableName)
{
	if(chkdate(obj))
	{
		return true;
	}
	else
	{
		alert("Please enter valid "+lableName+" (DD/MM/YYYY,DD.MM.YYYY,DD-MM-YYYY and DDMMYYYY).");
		obj.value="";
		return false;
	}
}
function obligationType(id,name)
{
	this.obligationId=id;
	this.obligationName=name;
}

function convertModifyToAdd(tab_str)
{
	var temp_img=document.getElementById("a_"+tab_str);
	var temp_src=temp_img.innerHTML;
	var ch=temp_src.charAt(temp_src.length - 1);
	if(ch=="y")
	{
		temp_img.innerHTML = "Add";
		temp_img.onmouseup = getVarFieldVal('str_onmouseup', tab_str);
		temp_img.onclick = getVarFieldVal('str_onclick', tab_str);
		temp_img.href = getVarFieldVal('str_href', tab_str);
	}	
}

function validateDateDemurrage(fromToObj)
{
	var date = document.getElementById('in_withholdeeFormTable_5').value;
	var dateDemurrage = "07/11/2019";
	var date1 = date.split("/");
	var dateDemurrage1 = dateDemurrage.split("/");
	if(document.getElementById('in_withholdeeFormTable_6').value=='WHT_1001')
	{
		if(date1[2]<=dateDemurrage1[2])
		{
			if(date1[2]==2019)
			{
				if(date1[1]<=dateDemurrage1[1])
				{
					if(date1[1]==11)
					{
						if(date1[0]<dateDemurrage1[0])
						{
					
						}
						else
						{
							document.getElementById('in_withholdeeFormTable_5').value = '';
							alert("Date for demurrage should be before 7th Nov 2019" );
						}
					}
				}
				else
				{
					document.getElementById('in_withholdeeFormTable_5').value = '';
					alert("Date for demurrage should be before 7th Nov 2019" );
				}
			}
		}
		else
		{
			document.getElementById('in_withholdeeFormTable_5').value = '';
			alert("Date for demurrage should be before 7th Nov 2019" );
		}
	}
}

function isDemurrage()
{
	if(document.getElementById('in_withholdeeFormTable_6').value=='WHT_1001')
	{
		return true;
	}
}
function convertToKenyanShillingWithFourDigitDecimal(valStr,decAlertFlag)
{
	if(valStr != "" && /*valStr != 0 &&*/ valStr != "NaN" && typeof(valStr) != "undefined")
	{
		var val = '' + valStr;
		var decimalPart = "";
		var decCnt=0;

		val = removeCommaFrmInput(val);

		if(val == "")
		{
			return false;
		}
		var sign = "";
		if(val.charAt(0) == '-')
		{
			val = val.substring(1);
			if(!(val.length > 0))
			{
				val = "0";
			}
			sign = "-";
		}

		var decimalFlag;
		if (val.split(".").length>2) {
			alert("Invalid number entered with more than one decimal part.");
			return 0;
		}
		if(val.indexOf(".") != -1)
		{
			decimalFlag = true;
			decimalPart = val.substring(val.indexOf("."));
			val = val.substring(0,val.indexOf("."));
			if (val == ""){
				val="0";
			}
		}

		while(val.charAt(0) == "0" && val != "0")
		{
			val = val.substring(1,val.length);
		}




		var str = "0123456789";

		for(j = 0; j < val.length; j++)
		{
			if(str.indexOf(val.charAt(j)) == -1)
			{
				val = "";
				alert("Please enter numeric data in this field");
				decimalFlag = false;
				return false;
			}
		}
		for(j = 1; j < decimalPart.length; j++)
		{
			if(str.indexOf(decimalPart.charAt(j)) == -1)
			{
				alert("Please enter numeric data in this field");
				return false;
			}
		}   

		var valGr8 = false;
		if(val.length > 20)
		{
			valGr8 = true;
			val = val.substring(0,20);
		}
		var deciGr8 = false;

		if(decimalPart.length > 4)
		{
			deciGr8 = true;
			decimalPart = decimalPart.substring(0,4);
		}
		// to display 00 in decimal while blank or in case of decimal only

		if(decimalPart.length==0 || decimalPart.length==1)
		{
			decimalPart=".00";
		}     
		// to display single decimal place only
		else if(decimalPart.length==2)
		{
			decimalPart+="0";        	
		}

		var result = "";
		if(val.length > 3)
		{
			val = parseInt(val);
			var i = 1;
			while(val != 0)
			{
				var temp = ""+(val%1000);
				while(temp.length < 3)
				{
					temp = "0"+temp;
				}
				result = "," + temp + result;
				val = parseInt(val/1000);
			}
		}
		else
		{
			val = parseInt(val);
			result = ""+val;
		}
		if(result.charAt(0) == ",")
		{
			result = result.substring(1);
		}

		while(result.charAt(0) == "0" && result != "0")
		{
			result = result.substring(1,result.length);
		}
		if(result == "")
		{
			result = "0";
		}
		val = sign + result  + "" + decimalPart;
		if(valGr8)
		{
			alert("The absolute part cannot be greater than 20 digits");
			valGr8 = false;
		} 
		if(deciGr8 && decAlertFlag)
		{
			alert("The decimal part cannot be greater than 3 digits");
			deciGr8 = false;
		}
		return val;
	}
	else
	{
		return 0;
	}
}

/*Added to check DAT effective hardcoded Date::START */

function validateDateForTaxpayerEffDateValue(date,effDate){
	if (isEqual(date, effDate)) {
		return true;
	}
	else if (fnCompareDates(date, effDate)){
		return true;
	} 
	else{
		return false;
	}
	return true;
}
/*Added to check DAT effective hardcoded Date::END */
